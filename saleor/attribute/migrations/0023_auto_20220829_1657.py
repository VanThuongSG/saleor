# Generated by Django 3.2.15 on 2022-08-29 09:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('post', '0027_auto_20220829_1657'),
        ('attribute', '0022_plain_text_attribute'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignedPostAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='attributevalue',
            name='reference_post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='references', to='post.post'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='entity_type',
            field=models.CharField(blank=True, choices=[('Page', 'Page'), ('Product', 'Product'), ('Post', 'Post')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='type',
            field=models.CharField(choices=[('product-type', 'Product type'), ('page-type', 'Page type'), ('post-type', 'Post type')], max_length=50),
        ),
        migrations.CreateModel(
            name='AttributePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(db_index=True, editable=False, null=True)),
                ('assigned_posts', models.ManyToManyField(blank=True, related_name='attributesrelated', through='attribute.AssignedPostAttribute', to='post.Post')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributepost', to='attribute.attribute')),
                ('post_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributepost', to='post.posttype')),
            ],
            options={
                'ordering': ('sort_order', 'pk'),
                'unique_together': {('attribute', 'post_type')},
            },
        ),
        migrations.CreateModel(
            name='AssignedPostAttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(db_index=True, editable=False, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postvalueassignment', to='attribute.assignedpostattribute')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postvalueassignment', to='attribute.attributevalue')),
            ],
            options={
                'ordering': ('sort_order', 'pk'),
                'unique_together': {('value', 'assignment')},
            },
        ),
        migrations.AddField(
            model_name='assignedpostattribute',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postassignments', to='attribute.attributepost'),
        ),
        migrations.AddField(
            model_name='assignedpostattribute',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='post.post'),
        ),
        migrations.AddField(
            model_name='assignedpostattribute',
            name='values',
            field=models.ManyToManyField(blank=True, related_name='postassignments', through='attribute.AssignedPostAttributeValue', to='attribute.AttributeValue'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='post_types',
            field=models.ManyToManyField(blank=True, related_name='post_attributes', through='attribute.AttributePost', to='post.PostType'),
        ),
        migrations.AlterUniqueTogether(
            name='assignedpostattribute',
            unique_together={('post', 'assignment')},
        ),
    ]
