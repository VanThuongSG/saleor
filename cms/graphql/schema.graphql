schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  """
  Look up a webhook by ID. Requires one of the following permissions: MANAGE_APPS, OWNER.
  """
  webhook(
    """ID of the webhook."""
    id: ID!
  ): Webhook

  """
  List of all available webhook events.
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  webhookEvents: [WebhookEvent!] @deprecated(reason: "This field will be removed in Saleor 4.0. Use `WebhookEventTypeAsyncEnum` and `WebhookEventTypeSyncEnum` to get available event types.")

  """
  Retrieve a sample payload for a given webhook event based on real data. It can be useful for some integrations where sample payload is required.
  """
  webhookSamplePayload(
    """Name of the requested event type."""
    eventType: WebhookSampleEventTypeEnum!
  ): JSONString

  """
  Returns a list of all translatable items of a given kind.
  
  Requires one of the following permissions: MANAGE_TRANSLATIONS.
  """
  translations(
    """Kind of objects to retrieve."""
    kind: TranslatableKinds!

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): TranslatableItemConnection

  """
  Lookup a translatable item by ID.
  
  Requires one of the following permissions: MANAGE_TRANSLATIONS.
  """
  translation(
    """ID of the object to retrieve."""
    id: ID!

    """Kind of the object to retrieve."""
    kind: TranslatableKinds!
  ): TranslatableItem

  """Look up a post by ID or slug."""
  post(
    """ID of the post."""
    id: ID

    """The slug of the post."""
    slug: String
  ): Post

  """List of the shop's posts."""
  posts(
    """Sort posts."""
    sortBy: PostSortingInput

    """Filtering options for posts."""
    filter: PostFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): PostCountableConnection

  """Look up a post type by ID."""
  postType(
    """ID of the post type."""
    id: ID!
  ): PostType

  """List of the post types."""
  postTypes(
    """Sort post types."""
    sortBy: PostTypeSortingInput

    """Filtering options for post types."""
    filter: PostTypeFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): PostTypeCountableConnection

  """Look up a page by ID or slug."""
  page(
    """ID of the page."""
    id: ID

    """The slug of the page."""
    slug: String
  ): Page

  """List of the shop's pages."""
  pages(
    """Sort pages."""
    sortBy: PageSortingInput

    """Filtering options for pages."""
    filter: PageFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): PageCountableConnection

  """Look up a page type by ID."""
  pageType(
    """ID of the page type."""
    id: ID!
  ): PageType

  """List of the page types."""
  pageTypes(
    """Sort page types."""
    sortBy: PageTypeSortingInput

    """Filtering options for page types."""
    filter: PageTypeFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): PageTypeCountableConnection

  """Look up a navigation menu by ID or name."""
  menu(
    """Slug of a channel for which the data should be returned."""
    channel: String

    """ID of the menu."""
    id: ID

    """The menu's name."""
    name: String

    """The menu's slug."""
    slug: String
  ): Menu

  """List of the storefront's menus."""
  menus(
    """Slug of a channel for which the data should be returned."""
    channel: String

    """Sort menus."""
    sortBy: MenuSortingInput

    """Filtering options for menus."""
    filter: MenuFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): MenuCountableConnection

  """Look up a menu item by ID."""
  menuItem(
    """ID of the menu item."""
    id: ID!

    """Slug of a channel for which the data should be returned."""
    channel: String
  ): MenuItem

  """List of the storefronts's menu items."""
  menuItems(
    """Slug of a channel for which the data should be returned."""
    channel: String

    """Sort menus items."""
    sortBy: MenuItemSortingInput

    """Filtering options for menu items."""
    filter: MenuItemFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): MenuItemCountableConnection

  """
  Look up a plugin by ID.
  
  Requires one of the following permissions: MANAGE_PLUGINS.
  """
  plugin(
    """ID of the plugin."""
    id: ID!
  ): Plugin

  """
  List of plugins.
  
  Requires one of the following permissions: MANAGE_PLUGINS.
  """
  plugins(
    """Filtering options for plugins."""
    filter: PluginFilterInput

    """Sort plugins."""
    sortBy: PluginSortingInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): PluginCountableConnection

  """Look up a channel by ID or slug."""
  channel(
    """ID of the channel."""
    id: ID

    """
    Slug of the channel.
    
    Added in Saleor 3.6.
    
    Note: this API is currently in Feature Preview and can be subject to changes at later point.
    """
    slug: String
  ): Channel

  """
  List of all channels.
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  channels: [Channel!]

  """
  List of all apps installations
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  appsInstallations: [AppInstallation!]!

  """
  List of the apps.
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER, MANAGE_APPS.
  """
  apps(
    """Filtering options for apps."""
    filter: AppFilterInput

    """Sort apps."""
    sortBy: AppSortingInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): AppCountableConnection

  """
  Look up an app by ID. If ID is not provided, return the currently authenticated app.
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER AUTHENTICATED_APP. The authenticated app has access to its resources. Fetching different apps requires MANAGE_APPS permission.
  """
  app(
    """ID of the app."""
    id: ID
  ): App

  """
  List of all extensions.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER, AUTHENTICATED_APP.
  """
  appExtensions(
    """Filtering options for apps extensions."""
    filter: AppExtensionFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): AppExtensionCountableConnection

  """
  Look up an app extension by ID.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER, AUTHENTICATED_APP.
  """
  appExtension(
    """ID of the app extension."""
    id: ID!
  ): AppExtension

  """Returns address validation rules."""
  addressValidationRules(
    """Two-letter ISO 3166-1 country code."""
    countryCode: CountryCode!

    """Designation of a region, province or state."""
    countryArea: String

    """City or a town name."""
    city: String

    """Sublocality like a district."""
    cityArea: String
  ): AddressValidationData

  """Look up an address by ID."""
  address(
    """ID of an address."""
    id: ID!
  ): Address

  """
  List of the shop's customers.
  
  Requires one of the following permissions: MANAGE_ORDERS, MANAGE_USERS.
  """
  customers(
    """Filtering options for customers."""
    filter: CustomerFilterInput

    """Sort customers."""
    sortBy: UserSortingInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): UserCountableConnection

  """
  List of permission groups.
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  permissionGroups(
    """Filtering options for permission groups."""
    filter: PermissionGroupFilterInput

    """Sort permission groups."""
    sortBy: PermissionGroupSortingInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): GroupCountableConnection

  """
  Look up permission group by ID.
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  permissionGroup(
    """ID of the group."""
    id: ID!
  ): Group

  """Return the currently authenticated user."""
  me: User

  """
  List of the shop's staff users.
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  staffUsers(
    """Filtering options for staff users."""
    filter: StaffUserInput

    """Sort staff users."""
    sortBy: UserSortingInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): UserCountableConnection

  """
  Look up a user by ID or email address.
  
  Requires one of the following permissions: MANAGE_STAFF, MANAGE_USERS, MANAGE_ORDERS.
  """
  user(
    """ID of the user."""
    id: ID

    """Email address of the user."""
    email: String
  ): User
  _entities(representations: [_Any]): [_Entity]
  _service: _Service
}

"""Webhook."""
type Webhook implements Node {
  id: ID!
  name: String!

  """List of webhook events."""
  events: [WebhookEvent!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `asyncEvents` or `syncEvents` instead.")

  """List of asynchronous webhook events."""
  asyncEvents: [WebhookEventAsync!]!
  app: App!

  """Event deliveries."""
  eventDeliveries(
    """Event delivery sorter."""
    sortBy: EventDeliverySortingInput

    """Event delivery filter options."""
    filter: EventDeliveryFilterInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): EventDeliveryCountableConnection

  """Target URL for webhook."""
  targetUrl: String!

  """Informs if webhook is activated."""
  isActive: Boolean!

  """
  Used to create a hash signature with each payload.
  
  If not set, since Saleor 3.5, your payload will be signed using private key used also to sign JWT tokens.
  """
  secretKey: String

  """Used to define payloads for specific events."""
  subscriptionQuery: String
}

"""An object with an ID"""
interface Node {
  """The ID of the object."""
  id: ID!
}

"""Webhook event."""
type WebhookEvent {
  """Display name of the event."""
  name: String!

  """Internal name of the event type."""
  eventType: WebhookEventTypeEnum!
}

"""Enum determining type of webhook."""
enum WebhookEventTypeEnum {
  """All the events."""
  ANY_EVENTS

  """A new address created."""
  ADDRESS_CREATED

  """An address updated."""
  ADDRESS_UPDATED

  """An address deleted."""
  ADDRESS_DELETED

  """A new app installed."""
  APP_INSTALLED

  """An app updated."""
  APP_UPDATED

  """An app deleted."""
  APP_DELETED

  """An app status is changed."""
  APP_STATUS_CHANGED

  """A new channel created."""
  CHANNEL_CREATED

  """A channel is updated."""
  CHANNEL_UPDATED

  """A channel is deleted."""
  CHANNEL_DELETED

  """A channel status is changed."""
  CHANNEL_STATUS_CHANGED

  """A new menu created."""
  MENU_CREATED

  """A menu is updated."""
  MENU_UPDATED

  """A menu is deleted."""
  MENU_DELETED

  """A new menu item created."""
  MENU_ITEM_CREATED

  """A menu item is updated."""
  MENU_ITEM_UPDATED

  """A menu item is deleted."""
  MENU_ITEM_DELETED

  """A new customer account is created."""
  CUSTOMER_CREATED

  """A customer account is updated."""
  CUSTOMER_UPDATED

  """A customer account is deleted."""
  CUSTOMER_DELETED

  """User notification triggered."""
  NOTIFY_USER

  """A new page is created."""
  PAGE_CREATED

  """A page is updated."""
  PAGE_UPDATED

  """A page is deleted."""
  PAGE_DELETED

  """A new page type is created."""
  PAGE_TYPE_CREATED

  """A page type is updated."""
  PAGE_TYPE_UPDATED

  """A page type is deleted."""
  PAGE_TYPE_DELETED

  """A new post is created."""
  POST_CREATED

  """A post is updated."""
  POST_UPDATED

  """A post is deleted."""
  POST_DELETED

  """A new post type is created."""
  POST_TYPE_CREATED

  """A post type is updated."""
  POST_TYPE_UPDATED

  """A post type is deleted."""
  POST_TYPE_DELETED

  """A new permission group is created."""
  PERMISSION_GROUP_CREATED

  """A permission group is updated."""
  PERMISSION_GROUP_UPDATED

  """A permission group is deleted."""
  PERMISSION_GROUP_DELETED

  """A new staff user is created."""
  STAFF_CREATED

  """A staff user is updated."""
  STAFF_UPDATED

  """A staff user is deleted."""
  STAFF_DELETED

  """An observability event is created."""
  OBSERVABILITY
}

"""Asynchronous webhook event."""
type WebhookEventAsync {
  """Display name of the event."""
  name: String!

  """Internal name of the event type."""
  eventType: WebhookEventTypeAsyncEnum!
}

"""Enum determining type of webhook."""
enum WebhookEventTypeAsyncEnum {
  """All the events."""
  ANY_EVENTS

  """A new address created."""
  ADDRESS_CREATED

  """An address updated."""
  ADDRESS_UPDATED

  """An address deleted."""
  ADDRESS_DELETED

  """A new app installed."""
  APP_INSTALLED

  """An app updated."""
  APP_UPDATED

  """An app deleted."""
  APP_DELETED

  """An app status is changed."""
  APP_STATUS_CHANGED

  """A new channel created."""
  CHANNEL_CREATED

  """A channel is updated."""
  CHANNEL_UPDATED

  """A channel is deleted."""
  CHANNEL_DELETED

  """A channel status is changed."""
  CHANNEL_STATUS_CHANGED

  """A new menu created."""
  MENU_CREATED

  """A menu is updated."""
  MENU_UPDATED

  """A menu is deleted."""
  MENU_DELETED

  """A new menu item created."""
  MENU_ITEM_CREATED

  """A menu item is updated."""
  MENU_ITEM_UPDATED

  """A menu item is deleted."""
  MENU_ITEM_DELETED

  """A new customer account is created."""
  CUSTOMER_CREATED

  """A customer account is updated."""
  CUSTOMER_UPDATED

  """A customer account is deleted."""
  CUSTOMER_DELETED

  """User notification triggered."""
  NOTIFY_USER

  """A new page is created."""
  PAGE_CREATED

  """A page is updated."""
  PAGE_UPDATED

  """A page is deleted."""
  PAGE_DELETED

  """A new page type is created."""
  PAGE_TYPE_CREATED

  """A page type is updated."""
  PAGE_TYPE_UPDATED

  """A page type is deleted."""
  PAGE_TYPE_DELETED

  """A new post is created."""
  POST_CREATED

  """A post is updated."""
  POST_UPDATED

  """A post is deleted."""
  POST_DELETED

  """A new post type is created."""
  POST_TYPE_CREATED

  """A post type is updated."""
  POST_TYPE_UPDATED

  """A post type is deleted."""
  POST_TYPE_DELETED

  """A new permission group is created."""
  PERMISSION_GROUP_CREATED

  """A permission group is updated."""
  PERMISSION_GROUP_UPDATED

  """A permission group is deleted."""
  PERMISSION_GROUP_DELETED

  """A new staff user is created."""
  STAFF_CREATED

  """A staff user is updated."""
  STAFF_UPDATED

  """A staff user is deleted."""
  STAFF_DELETED

  """An observability event is created."""
  OBSERVABILITY
}

"""Represents app data."""
type App implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata

  """List of the app's permissions."""
  permissions: [Permission!]

  """The date and time when the app was created."""
  created: DateTime

  """Determine if app will be set active or not."""
  isActive: Boolean

  """Name of the app."""
  name: String

  """Type of the app."""
  type: AppTypeEnum

  """
  Last 4 characters of the tokens.
  
  Requires one of the following permissions: MANAGE_APPS, OWNER.
  """
  tokens: [AppToken!]

  """
  List of webhooks assigned to this app.
  
  Requires one of the following permissions: MANAGE_APPS, OWNER.
  """
  webhooks: [Webhook!]

  """Description of this app."""
  aboutApp: String

  """Description of the data privacy defined for this app."""
  dataPrivacy: String @deprecated(reason: "This field will be removed in Saleor 4.0. Use `dataPrivacyUrl` instead.")

  """URL to details about the privacy policy on the app owner page."""
  dataPrivacyUrl: String

  """Homepage of the app."""
  homepageUrl: String

  """Support page for the app."""
  supportUrl: String

  """URL to iframe with the configuration for the app."""
  configurationUrl: String @deprecated(reason: "This field will be removed in Saleor 4.0. Use `appUrl` instead.")

  """URL to iframe with the app."""
  appUrl: String

  """
  URL to manifest used during app's installation.
  
  Added in Saleor 3.5.
  """
  manifestUrl: String

  """Version number of the app."""
  version: String

  """JWT token used to authenticate by thridparty app."""
  accessToken: String

  """
  App's dashboard extensions.
  
  Added in Saleor 3.1.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  extensions: [AppExtension!]!
}

interface ObjectWithMetadata {
  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
}

type MetadataItem {
  """Key of a metadata item."""
  key: String!

  """Value of a metadata item."""
  value: String!
}

"""
Metadata is a map of key-value pairs, both keys and values are `String`.

Example:
```
{
    "key1": "value1",
    "key2": "value2"
}
```
"""
scalar Metadata

"""Represents a permission object in a friendly form."""
type Permission {
  """Internal code for permission."""
  code: PermissionEnum!

  """Describe action(s) allowed to do by permission."""
  name: String!
}

"""An enumeration."""
enum PermissionEnum {
  MANAGE_USERS
  MANAGE_STAFF
  IMPERSONATE_USER
  MANAGE_APPS
  MANAGE_OBSERVABILITY
  MANAGE_CHANNELS
  MANAGE_DISCOUNTS
  MANAGE_PLUGINS
  MANAGE_GIFT_CARD
  MANAGE_MENUS
  MANAGE_ORDERS
  MANAGE_PAGES
  MANAGE_PAGE_TYPES_AND_ATTRIBUTES
  HANDLE_PAYMENTS
  MANAGE_PRODUCTS
  MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES
  MANAGE_SHIPPING
  MANAGE_SETTINGS
  MANAGE_TRANSLATIONS
  MANAGE_CHECKOUTS
  HANDLE_CHECKOUTS
  HANDLE_TAXES
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

"""Enum determining type of your App."""
enum AppTypeEnum {
  """
  Local Saleor App. The app is fully manageable from dashboard. You can change assigned permissions, add webhooks, or authentication token
  """
  LOCAL

  """
  Third party external App. Installation is fully automated. Saleor uses a defined App manifest to gather all required information.
  """
  THIRDPARTY
}

"""Represents token data."""
type AppToken implements Node {
  id: ID!

  """Name of the authenticated token."""
  name: String

  """Last 4 characters of the token."""
  authToken: String
}

"""Represents app data."""
type AppExtension implements Node {
  id: ID!

  """List of the app extension's permissions."""
  permissions: [Permission!]!

  """Label of the extension to show in the dashboard."""
  label: String!

  """URL of a view where extension's iframe is placed."""
  url: String!

  """Place where given extension will be mounted."""
  mount: AppExtensionMountEnum!

  """Type of way how app extension will be opened."""
  target: AppExtensionTargetEnum!
  app: App!

  """JWT token used to authenticate by thridparty app extension."""
  accessToken: String
}

"""All places where app extension can be mounted."""
enum AppExtensionMountEnum {
  CUSTOMER_OVERVIEW_CREATE
  CUSTOMER_OVERVIEW_MORE_ACTIONS
  CUSTOMER_DETAILS_MORE_ACTIONS
  PRODUCT_OVERVIEW_CREATE
  PRODUCT_OVERVIEW_MORE_ACTIONS
  PRODUCT_DETAILS_MORE_ACTIONS
  NAVIGATION_CATALOG
  NAVIGATION_ORDERS
  NAVIGATION_CUSTOMERS
  NAVIGATION_DISCOUNTS
  NAVIGATION_TRANSLATIONS
  NAVIGATION_PAGES
  ORDER_DETAILS_MORE_ACTIONS
  ORDER_OVERVIEW_CREATE
  ORDER_OVERVIEW_MORE_ACTIONS
}

"""
All available ways of opening an app extension.

    POPUP - app's extension will be mounted as a popup window
    APP_PAGE - redirect to app's page
"""
enum AppExtensionTargetEnum {
  POPUP
  APP_PAGE
}

type EventDeliveryCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [EventDeliveryCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

"""
The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type EventDeliveryCountableEdge {
  """The item at the end of the edge."""
  node: EventDelivery!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Event delivery."""
type EventDelivery implements Node {
  id: ID!
  createdAt: DateTime!

  """Event delivery status."""
  status: EventDeliveryStatusEnum!

  """Webhook event type."""
  eventType: WebhookEventTypeEnum!

  """Event delivery attempts."""
  attempts(
    """Event delivery sorter"""
    sortBy: EventDeliveryAttemptSortingInput

    """Return the elements in the list that come before the specified cursor."""
    before: String

    """Return the elements in the list that come after the specified cursor."""
    after: String

    """Return the first n elements from the list."""
    first: Int

    """Return the last n elements from the list."""
    last: Int
  ): EventDeliveryAttemptCountableConnection

  """Event payload."""
  payload: String
}

enum EventDeliveryStatusEnum {
  PENDING
  SUCCESS
  FAILED
}

type EventDeliveryAttemptCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [EventDeliveryAttemptCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type EventDeliveryAttemptCountableEdge {
  """The item at the end of the edge."""
  node: EventDeliveryAttempt!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Event delivery attempts."""
type EventDeliveryAttempt implements Node {
  id: ID!

  """Event delivery creation date and time."""
  createdAt: DateTime!

  """Task id for delivery attempt."""
  taskId: String

  """Delivery attempt duration."""
  duration: Float

  """Delivery attempt response content."""
  response: String

  """Response headers for delivery attempt."""
  responseHeaders: String

  """Delivery attempt response status code."""
  responseStatusCode: Int

  """Request headers for delivery attempt."""
  requestHeaders: String

  """Event delivery status."""
  status: EventDeliveryStatusEnum!
}

input EventDeliveryAttemptSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort attempts by the selected field."""
  field: EventDeliveryAttemptSortField!
}

enum OrderDirection {
  """Specifies an ascending sort order."""
  ASC

  """Specifies a descending sort order."""
  DESC
}

enum EventDeliveryAttemptSortField {
  """Sort event delivery attempts by created at."""
  CREATED_AT
}

input EventDeliverySortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort deliveries by the selected field."""
  field: EventDeliverySortField!
}

enum EventDeliverySortField {
  """Sort event deliveries by created at."""
  CREATED_AT
}

input EventDeliveryFilterInput {
  status: EventDeliveryStatusEnum
  eventType: WebhookEventTypeEnum
}

scalar JSONString

"""An enumeration."""
enum WebhookSampleEventTypeEnum {
  ADDRESS_CREATED
  ADDRESS_UPDATED
  ADDRESS_DELETED
  APP_INSTALLED
  APP_UPDATED
  APP_DELETED
  APP_STATUS_CHANGED
  CHANNEL_CREATED
  CHANNEL_UPDATED
  CHANNEL_DELETED
  CHANNEL_STATUS_CHANGED
  MENU_CREATED
  MENU_UPDATED
  MENU_DELETED
  MENU_ITEM_CREATED
  MENU_ITEM_UPDATED
  MENU_ITEM_DELETED
  CUSTOMER_CREATED
  CUSTOMER_UPDATED
  CUSTOMER_DELETED
  NOTIFY_USER
  PAGE_CREATED
  PAGE_UPDATED
  PAGE_DELETED
  PAGE_TYPE_CREATED
  PAGE_TYPE_UPDATED
  PAGE_TYPE_DELETED
  POST_CREATED
  POST_UPDATED
  POST_DELETED
  POST_TYPE_CREATED
  POST_TYPE_UPDATED
  POST_TYPE_DELETED
  PERMISSION_GROUP_CREATED
  PERMISSION_GROUP_UPDATED
  PERMISSION_GROUP_DELETED
  STAFF_CREATED
  STAFF_UPDATED
  STAFF_DELETED
  OBSERVABILITY
}

type TranslatableItemConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [TranslatableItemEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type TranslatableItemEdge {
  """The item at the end of the edge."""
  node: TranslatableItem!

  """A cursor for use in pagination."""
  cursor: String!
}

union TranslatableItem = PageTranslatableContent | PostTranslatableContent | MenuItemTranslatableContent

type PageTranslatableContent implements Node {
  id: ID!
  seoTitle: String
  seoDescription: String
  title: String!

  """
  Content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """
  Content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  contentJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `content` field instead.")

  """Returns translated page fields for the given language code."""
  translation(
    """A language code to return the translation for page."""
    languageCode: LanguageCodeEnum!
  ): PageTranslation

  """
  A static page that can be manually added by a shop operator through the dashboard.
  """
  page: Page @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")
}

type PageTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  seoTitle: String
  seoDescription: String
  title: String

  """
  Translated content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """
  Translated description of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  contentJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `content` field instead.")
}

type LanguageDisplay {
  """ISO 639 representation of the language name."""
  code: LanguageCodeEnum!

  """Full name of the language."""
  language: String!
}

"""An enumeration."""
enum LanguageCodeEnum {
  AF
  AF_NA
  AF_ZA
  AGQ
  AGQ_CM
  AK
  AK_GH
  AM
  AM_ET
  AR
  AR_AE
  AR_BH
  AR_DJ
  AR_DZ
  AR_EG
  AR_EH
  AR_ER
  AR_IL
  AR_IQ
  AR_JO
  AR_KM
  AR_KW
  AR_LB
  AR_LY
  AR_MA
  AR_MR
  AR_OM
  AR_PS
  AR_QA
  AR_SA
  AR_SD
  AR_SO
  AR_SS
  AR_SY
  AR_TD
  AR_TN
  AR_YE
  AS
  AS_IN
  ASA
  ASA_TZ
  AST
  AST_ES
  AZ
  AZ_CYRL
  AZ_CYRL_AZ
  AZ_LATN
  AZ_LATN_AZ
  BAS
  BAS_CM
  BE
  BE_BY
  BEM
  BEM_ZM
  BEZ
  BEZ_TZ
  BG
  BG_BG
  BM
  BM_ML
  BN
  BN_BD
  BN_IN
  BO
  BO_CN
  BO_IN
  BR
  BR_FR
  BRX
  BRX_IN
  BS
  BS_CYRL
  BS_CYRL_BA
  BS_LATN
  BS_LATN_BA
  CA
  CA_AD
  CA_ES
  CA_ES_VALENCIA
  CA_FR
  CA_IT
  CCP
  CCP_BD
  CCP_IN
  CE
  CE_RU
  CEB
  CEB_PH
  CGG
  CGG_UG
  CHR
  CHR_US
  CKB
  CKB_IQ
  CKB_IR
  CS
  CS_CZ
  CU
  CU_RU
  CY
  CY_GB
  DA
  DA_DK
  DA_GL
  DAV
  DAV_KE
  DE
  DE_AT
  DE_BE
  DE_CH
  DE_DE
  DE_IT
  DE_LI
  DE_LU
  DJE
  DJE_NE
  DSB
  DSB_DE
  DUA
  DUA_CM
  DYO
  DYO_SN
  DZ
  DZ_BT
  EBU
  EBU_KE
  EE
  EE_GH
  EE_TG
  EL
  EL_CY
  EL_GR
  EN
  EN_AE
  EN_AG
  EN_AI
  EN_AS
  EN_AT
  EN_AU
  EN_BB
  EN_BE
  EN_BI
  EN_BM
  EN_BS
  EN_BW
  EN_BZ
  EN_CA
  EN_CC
  EN_CH
  EN_CK
  EN_CM
  EN_CX
  EN_CY
  EN_DE
  EN_DG
  EN_DK
  EN_DM
  EN_ER
  EN_FI
  EN_FJ
  EN_FK
  EN_FM
  EN_GB
  EN_GD
  EN_GG
  EN_GH
  EN_GI
  EN_GM
  EN_GU
  EN_GY
  EN_HK
  EN_IE
  EN_IL
  EN_IM
  EN_IN
  EN_IO
  EN_JE
  EN_JM
  EN_KE
  EN_KI
  EN_KN
  EN_KY
  EN_LC
  EN_LR
  EN_LS
  EN_MG
  EN_MH
  EN_MO
  EN_MP
  EN_MS
  EN_MT
  EN_MU
  EN_MW
  EN_MY
  EN_NA
  EN_NF
  EN_NG
  EN_NL
  EN_NR
  EN_NU
  EN_NZ
  EN_PG
  EN_PH
  EN_PK
  EN_PN
  EN_PR
  EN_PW
  EN_RW
  EN_SB
  EN_SC
  EN_SD
  EN_SE
  EN_SG
  EN_SH
  EN_SI
  EN_SL
  EN_SS
  EN_SX
  EN_SZ
  EN_TC
  EN_TK
  EN_TO
  EN_TT
  EN_TV
  EN_TZ
  EN_UG
  EN_UM
  EN_US
  EN_VC
  EN_VG
  EN_VI
  EN_VU
  EN_WS
  EN_ZA
  EN_ZM
  EN_ZW
  EO
  ES
  ES_AR
  ES_BO
  ES_BR
  ES_BZ
  ES_CL
  ES_CO
  ES_CR
  ES_CU
  ES_DO
  ES_EA
  ES_EC
  ES_ES
  ES_GQ
  ES_GT
  ES_HN
  ES_IC
  ES_MX
  ES_NI
  ES_PA
  ES_PE
  ES_PH
  ES_PR
  ES_PY
  ES_SV
  ES_US
  ES_UY
  ES_VE
  ET
  ET_EE
  EU
  EU_ES
  EWO
  EWO_CM
  FA
  FA_AF
  FA_IR
  FF
  FF_ADLM
  FF_ADLM_BF
  FF_ADLM_CM
  FF_ADLM_GH
  FF_ADLM_GM
  FF_ADLM_GN
  FF_ADLM_GW
  FF_ADLM_LR
  FF_ADLM_MR
  FF_ADLM_NE
  FF_ADLM_NG
  FF_ADLM_SL
  FF_ADLM_SN
  FF_LATN
  FF_LATN_BF
  FF_LATN_CM
  FF_LATN_GH
  FF_LATN_GM
  FF_LATN_GN
  FF_LATN_GW
  FF_LATN_LR
  FF_LATN_MR
  FF_LATN_NE
  FF_LATN_NG
  FF_LATN_SL
  FF_LATN_SN
  FI
  FI_FI
  FIL
  FIL_PH
  FO
  FO_DK
  FO_FO
  FR
  FR_BE
  FR_BF
  FR_BI
  FR_BJ
  FR_BL
  FR_CA
  FR_CD
  FR_CF
  FR_CG
  FR_CH
  FR_CI
  FR_CM
  FR_DJ
  FR_DZ
  FR_FR
  FR_GA
  FR_GF
  FR_GN
  FR_GP
  FR_GQ
  FR_HT
  FR_KM
  FR_LU
  FR_MA
  FR_MC
  FR_MF
  FR_MG
  FR_ML
  FR_MQ
  FR_MR
  FR_MU
  FR_NC
  FR_NE
  FR_PF
  FR_PM
  FR_RE
  FR_RW
  FR_SC
  FR_SN
  FR_SY
  FR_TD
  FR_TG
  FR_TN
  FR_VU
  FR_WF
  FR_YT
  FUR
  FUR_IT
  FY
  FY_NL
  GA
  GA_GB
  GA_IE
  GD
  GD_GB
  GL
  GL_ES
  GSW
  GSW_CH
  GSW_FR
  GSW_LI
  GU
  GU_IN
  GUZ
  GUZ_KE
  GV
  GV_IM
  HA
  HA_GH
  HA_NE
  HA_NG
  HAW
  HAW_US
  HE
  HE_IL
  HI
  HI_IN
  HR
  HR_BA
  HR_HR
  HSB
  HSB_DE
  HU
  HU_HU
  HY
  HY_AM
  IA
  ID
  ID_ID
  IG
  IG_NG
  II
  II_CN
  IS
  IS_IS
  IT
  IT_CH
  IT_IT
  IT_SM
  IT_VA
  JA
  JA_JP
  JGO
  JGO_CM
  JMC
  JMC_TZ
  JV
  JV_ID
  KA
  KA_GE
  KAB
  KAB_DZ
  KAM
  KAM_KE
  KDE
  KDE_TZ
  KEA
  KEA_CV
  KHQ
  KHQ_ML
  KI
  KI_KE
  KK
  KK_KZ
  KKJ
  KKJ_CM
  KL
  KL_GL
  KLN
  KLN_KE
  KM
  KM_KH
  KN
  KN_IN
  KO
  KO_KP
  KO_KR
  KOK
  KOK_IN
  KS
  KS_ARAB
  KS_ARAB_IN
  KSB
  KSB_TZ
  KSF
  KSF_CM
  KSH
  KSH_DE
  KU
  KU_TR
  KW
  KW_GB
  KY
  KY_KG
  LAG
  LAG_TZ
  LB
  LB_LU
  LG
  LG_UG
  LKT
  LKT_US
  LN
  LN_AO
  LN_CD
  LN_CF
  LN_CG
  LO
  LO_LA
  LRC
  LRC_IQ
  LRC_IR
  LT
  LT_LT
  LU
  LU_CD
  LUO
  LUO_KE
  LUY
  LUY_KE
  LV
  LV_LV
  MAI
  MAI_IN
  MAS
  MAS_KE
  MAS_TZ
  MER
  MER_KE
  MFE
  MFE_MU
  MG
  MG_MG
  MGH
  MGH_MZ
  MGO
  MGO_CM
  MI
  MI_NZ
  MK
  MK_MK
  ML
  ML_IN
  MN
  MN_MN
  MNI
  MNI_BENG
  MNI_BENG_IN
  MR
  MR_IN
  MS
  MS_BN
  MS_ID
  MS_MY
  MS_SG
  MT
  MT_MT
  MUA
  MUA_CM
  MY
  MY_MM
  MZN
  MZN_IR
  NAQ
  NAQ_NA
  NB
  NB_NO
  NB_SJ
  ND
  ND_ZW
  NDS
  NDS_DE
  NDS_NL
  NE
  NE_IN
  NE_NP
  NL
  NL_AW
  NL_BE
  NL_BQ
  NL_CW
  NL_NL
  NL_SR
  NL_SX
  NMG
  NMG_CM
  NN
  NN_NO
  NNH
  NNH_CM
  NUS
  NUS_SS
  NYN
  NYN_UG
  OM
  OM_ET
  OM_KE
  OR
  OR_IN
  OS
  OS_GE
  OS_RU
  PA
  PA_ARAB
  PA_ARAB_PK
  PA_GURU
  PA_GURU_IN
  PCM
  PCM_NG
  PL
  PL_PL
  PRG
  PS
  PS_AF
  PS_PK
  PT
  PT_AO
  PT_BR
  PT_CH
  PT_CV
  PT_GQ
  PT_GW
  PT_LU
  PT_MO
  PT_MZ
  PT_PT
  PT_ST
  PT_TL
  QU
  QU_BO
  QU_EC
  QU_PE
  RM
  RM_CH
  RN
  RN_BI
  RO
  RO_MD
  RO_RO
  ROF
  ROF_TZ
  RU
  RU_BY
  RU_KG
  RU_KZ
  RU_MD
  RU_RU
  RU_UA
  RW
  RW_RW
  RWK
  RWK_TZ
  SAH
  SAH_RU
  SAQ
  SAQ_KE
  SAT
  SAT_OLCK
  SAT_OLCK_IN
  SBP
  SBP_TZ
  SD
  SD_ARAB
  SD_ARAB_PK
  SD_DEVA
  SD_DEVA_IN
  SE
  SE_FI
  SE_NO
  SE_SE
  SEH
  SEH_MZ
  SES
  SES_ML
  SG
  SG_CF
  SHI
  SHI_LATN
  SHI_LATN_MA
  SHI_TFNG
  SHI_TFNG_MA
  SI
  SI_LK
  SK
  SK_SK
  SL
  SL_SI
  SMN
  SMN_FI
  SN
  SN_ZW
  SO
  SO_DJ
  SO_ET
  SO_KE
  SO_SO
  SQ
  SQ_AL
  SQ_MK
  SQ_XK
  SR
  SR_CYRL
  SR_CYRL_BA
  SR_CYRL_ME
  SR_CYRL_RS
  SR_CYRL_XK
  SR_LATN
  SR_LATN_BA
  SR_LATN_ME
  SR_LATN_RS
  SR_LATN_XK
  SU
  SU_LATN
  SU_LATN_ID
  SV
  SV_AX
  SV_FI
  SV_SE
  SW
  SW_CD
  SW_KE
  SW_TZ
  SW_UG
  TA
  TA_IN
  TA_LK
  TA_MY
  TA_SG
  TE
  TE_IN
  TEO
  TEO_KE
  TEO_UG
  TG
  TG_TJ
  TH
  TH_TH
  TI
  TI_ER
  TI_ET
  TK
  TK_TM
  TO
  TO_TO
  TR
  TR_CY
  TR_TR
  TT
  TT_RU
  TWQ
  TWQ_NE
  TZM
  TZM_MA
  UG
  UG_CN
  UK
  UK_UA
  UR
  UR_IN
  UR_PK
  UZ
  UZ_ARAB
  UZ_ARAB_AF
  UZ_CYRL
  UZ_CYRL_UZ
  UZ_LATN
  UZ_LATN_UZ
  VAI
  VAI_LATN
  VAI_LATN_LR
  VAI_VAII
  VAI_VAII_LR
  VI
  VI_VN
  VO
  VUN
  VUN_TZ
  WAE
  WAE_CH
  WO
  WO_SN
  XH
  XH_ZA
  XOG
  XOG_UG
  YAV
  YAV_CM
  YI
  YO
  YO_BJ
  YO_NG
  YUE
  YUE_HANS
  YUE_HANS_CN
  YUE_HANT
  YUE_HANT_HK
  ZGH
  ZGH_MA
  ZH
  ZH_HANS
  ZH_HANS_CN
  ZH_HANS_HK
  ZH_HANS_MO
  ZH_HANS_SG
  ZH_HANT
  ZH_HANT_HK
  ZH_HANT_MO
  ZH_HANT_TW
  ZU
  ZU_ZA
}

"""
A static page that can be manually added by a shop operator through the dashboard.
"""
type Page implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  seoTitle: String
  seoDescription: String
  title: String!

  """
  Content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString
  publicationDate: Date @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `publishedAt` field to fetch the publication date.")

  """
  The page publication date.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime
  isPublished: Boolean!
  slug: String!
  pageType: PageType!
  created: DateTime!

  """
  Content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  contentJson: JSONString! @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `content` field instead.")

  """Returns translated page fields for the given language code."""
  translation(
    """A language code to return the translation for page."""
    languageCode: LanguageCodeEnum!
  ): PageTranslation
}

"""
The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date

"""
Represents a type of page. It defines what attributes are available to pages of this type.
"""
type PageType implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  slug: String!

  """
  Whether page type has pages assigned.
  
  Requires one of the following permissions: MANAGE_PAGES.
  """
  hasPages: Boolean
}

type PostTranslatableContent implements Node {
  id: ID!
  seoTitle: String
  seoDescription: String
  title: String!

  """
  Content of the post.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """
  Content of the page.
  
  Rich text format. For reference see https://editorjs.io/
  """
  contentJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `content` field instead.")

  """Returns translated page fields for the given language code."""
  translation(
    """A language code to return the translation for page."""
    languageCode: LanguageCodeEnum!
  ): PostTranslation

  """
  A static page that can be manually added by a shop operator through the dashboard.
  """
  post: Post @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")
}

type PostTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  seoTitle: String
  seoDescription: String
  title: String

  """
  Translated content of the post.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """
  Translated description of the post.
  
  Rich text format. For reference see https://editorjs.io/
  """
  contentJson: JSONString @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `content` field instead.")
}

"""
A static post that can be manually added by a shop operator through the dashboard.
"""
type Post implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  seoTitle: String
  seoDescription: String
  title: String!

  """
  Content of the post.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString
  publicationDate: Date @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `publishedAt` field to fetch the publication date.")

  """
  The post publication date.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime
  isPublished: Boolean!
  slug: String!
  postType: PostType!
  created: DateTime!

  """
  Content of the post.
  
  Rich text format. For reference see https://editorjs.io/
  """
  contentJson: JSONString! @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `content` field instead.")
  externalUrl: String

  """Returns translated post fields for the given language code."""
  translation(
    """A language code to return the translation for post."""
    languageCode: LanguageCodeEnum!
  ): PostTranslation
  thumbnail(
    """
    Size of the image. If not provided, the original image will be returned.
    """
    size: Int

    """
    The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned.
    
    Added in Saleor 3.6.
    
    Note: this API is currently in Feature Preview and can be subject to changes at later point.
    """
    format: ThumbnailFormatEnum
  ): Image

  """Get a single post media by ID."""
  mediaById(
    """ID of a post media."""
    id: ID
  ): PostMedia

  """Get a single post image by ID."""
  imageById(
    """ID of a post image."""
    id: ID
  ): PostMedia @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `mediaById` field instead.")

  """List of media for the post."""
  media: [PostMedia!]

  """List of images for the post."""
  images: [PostMedia!] @deprecated(reason: "This field will be removed in Saleor 4.0. Use the `media` field instead.")
}

"""
Represents a type of post. It defines what attributes are available to posts of this type.
"""
type PostType implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  slug: String!

  """
  Whether post type has posts assigned.
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  hasPosts: Boolean
}

"""Represents an image."""
type Image {
  """The URL of the image."""
  url: String!

  """Alt text for an image."""
  alt: String
}

"""An enumeration."""
enum ThumbnailFormatEnum {
  WEBP
}

"""Represents a post media."""
type PostMedia implements Node {
  id: ID!
  sortOrder: Int
  alt: String!
  type: PostMediaType!
  oembedData: JSONString!
  url(
    """
    Size of the image. If not provided, the original image will be returned.
    """
    size: Int

    """
    The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned.
    
    Added in Saleor 3.6.
    
    Note: this API is currently in Feature Preview and can be subject to changes at later point.
    """
    format: ThumbnailFormatEnum
  ): String!
}

"""An enumeration."""
enum PostMediaType {
  IMAGE
  VIDEO
}

type MenuItemTranslatableContent implements Node {
  id: ID!
  name: String!

  """Returns translated menu item fields for the given language code."""
  translation(
    """A language code to return the translation for menu item."""
    languageCode: LanguageCodeEnum!
  ): MenuItemTranslation

  """
  Represents a single item of the related menu. Can store categories, collection or pages.
  """
  menuItem: MenuItem @deprecated(reason: "This field will be removed in Saleor 4.0. Get model fields from the root level queries.")
}

type MenuItemTranslation implements Node {
  id: ID!

  """Translation language."""
  language: LanguageDisplay!
  name: String!
}

"""
Represents a single item of the related menu. Can store categories, collection or pages.
"""
type MenuItem implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  menu: Menu!
  parent: MenuItem

  """
  A page associated with this menu item. Requires one of the following permissions to include unpublished items: MANAGE_PAGES.
  """
  page: Page
  level: Int!
  children: [MenuItem!]

  """URL to the menu item."""
  url: String

  """Returns translated menu item fields for the given language code."""
  translation(
    """A language code to return the translation for menu item."""
    languageCode: LanguageCodeEnum!
  ): MenuItemTranslation
}

"""
Represents a single menu - an object that is used to help navigate through the store.
"""
type Menu implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  name: String!
  slug: String!
  items: [MenuItem!]
}

enum TranslatableKinds {
  MENU_ITEM
  PAGE
  POST
}

type PostCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [PostCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type PostCountableEdge {
  """The item at the end of the edge."""
  node: Post!

  """A cursor for use in pagination."""
  cursor: String!
}

input PostSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort posts by the selected field."""
  field: PostSortField!
}

enum PostSortField {
  """Sort posts by title."""
  TITLE

  """Sort posts by slug."""
  SLUG

  """Sort posts by visibility."""
  VISIBILITY

  """Sort posts by creation date."""
  CREATION_DATE

  """
  Sort posts by publication date.
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  PUBLICATION_DATE

  """
  Sort posts by publication date.
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  PUBLISHED_AT
}

input PostFilterInput {
  search: String
  metadata: [MetadataFilter!]
  postTypes: [ID!]
  ids: [ID!]
}

input MetadataFilter {
  """Key of a metadata item."""
  key: String!

  """Value of a metadata item."""
  value: String
}

type PostTypeCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [PostTypeCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type PostTypeCountableEdge {
  """The item at the end of the edge."""
  node: PostType!

  """A cursor for use in pagination."""
  cursor: String!
}

input PostTypeSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort post types by the selected field."""
  field: PostTypeSortField!
}

enum PostTypeSortField {
  """Sort post types by name."""
  NAME

  """Sort post types by slug."""
  SLUG
}

input PostTypeFilterInput {
  search: String
}

type PageCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [PageCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type PageCountableEdge {
  """The item at the end of the edge."""
  node: Page!

  """A cursor for use in pagination."""
  cursor: String!
}

input PageSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort pages by the selected field."""
  field: PageSortField!
}

enum PageSortField {
  """Sort pages by title."""
  TITLE

  """Sort pages by slug."""
  SLUG

  """Sort pages by visibility."""
  VISIBILITY

  """Sort pages by creation date."""
  CREATION_DATE

  """
  Sort pages by publication date.
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  PUBLICATION_DATE

  """
  Sort pages by publication date.
  
  DEPRECATED: this field will be removed in Saleor 4.0.
  """
  PUBLISHED_AT
}

input PageFilterInput {
  search: String
  metadata: [MetadataFilter!]
  pageTypes: [ID!]
  ids: [ID!]
}

type PageTypeCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [PageTypeCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type PageTypeCountableEdge {
  """The item at the end of the edge."""
  node: PageType!

  """A cursor for use in pagination."""
  cursor: String!
}

input PageTypeSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort page types by the selected field."""
  field: PageTypeSortField!
}

enum PageTypeSortField {
  """Sort page types by name."""
  NAME

  """Sort page types by slug."""
  SLUG
}

input PageTypeFilterInput {
  search: String
}

type MenuCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [MenuCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type MenuCountableEdge {
  """The item at the end of the edge."""
  node: Menu!

  """A cursor for use in pagination."""
  cursor: String!
}

input MenuSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort menus by the selected field."""
  field: MenuSortField!
}

enum MenuSortField {
  """Sort menus by name."""
  NAME

  """Sort menus by items count."""
  ITEMS_COUNT
}

input MenuFilterInput {
  search: String
  slug: [String!]
  metadata: [MetadataFilter!]
}

type MenuItemCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [MenuItemCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type MenuItemCountableEdge {
  """The item at the end of the edge."""
  node: MenuItem!

  """A cursor for use in pagination."""
  cursor: String!
}

input MenuItemSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort menu items by the selected field."""
  field: MenuItemsSortField!
}

enum MenuItemsSortField {
  """Sort menu items by name."""
  NAME
}

input MenuItemFilterInput {
  search: String
  metadata: [MetadataFilter!]
}

"""Plugin."""
type Plugin {
  """Identifier of the plugin."""
  id: ID!

  """Name of the plugin."""
  name: String!

  """Description of the plugin."""
  description: String!

  """Global configuration of the plugin (not channel-specific)."""
  globalConfiguration: PluginConfiguration

  """Channel-specific plugin configuration."""
  channelConfigurations: [PluginConfiguration!]!
}

"""Stores information about a configuration of plugin."""
type PluginConfiguration {
  """Determines if plugin is active or not."""
  active: Boolean!

  """The channel to which the plugin configuration is assigned to."""
  channel: Channel

  """Configuration of the plugin."""
  configuration: [ConfigurationItem!]
}

"""Represents channel."""
type Channel implements Node {
  id: ID!

  """Slug of the channel."""
  slug: String!

  """
  Name of the channel.
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  name: String!

  """
  Whether the channel is active.
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  isActive: Boolean!
}

"""Stores information about a single configuration field."""
type ConfigurationItem {
  """Name of the field."""
  name: String!

  """Current value of the field."""
  value: String

  """Type of the field."""
  type: ConfigurationTypeFieldEnum

  """Help text for the field."""
  helpText: String

  """Label for the field."""
  label: String
}

"""An enumeration."""
enum ConfigurationTypeFieldEnum {
  STRING
  MULTILINE
  BOOLEAN
  SECRET
  PASSWORD
  SECRETMULTILINE
  OUTPUT
}

type PluginCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [PluginCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type PluginCountableEdge {
  """The item at the end of the edge."""
  node: Plugin!

  """A cursor for use in pagination."""
  cursor: String!
}

input PluginFilterInput {
  statusInChannels: PluginStatusInChannelsInput
  search: String
  type: PluginConfigurationType
}

input PluginStatusInChannelsInput {
  active: Boolean!
  channels: [ID!]!
}

enum PluginConfigurationType {
  PER_CHANNEL
  GLOBAL
}

input PluginSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort plugins by the selected field."""
  field: PluginSortField!
}

enum PluginSortField {
  NAME
  IS_ACTIVE
}

"""Represents ongoing installation of app."""
type AppInstallation implements Node & Job {
  id: ID!

  """Job status."""
  status: JobStatusEnum!

  """Created date time of job in ISO 8601 format."""
  createdAt: DateTime!

  """Date time of job last update in ISO 8601 format."""
  updatedAt: DateTime!

  """Job message."""
  message: String
  appName: String!
  manifestUrl: String!
}

interface Job {
  """Job status."""
  status: JobStatusEnum!

  """Created date time of job in ISO 8601 format."""
  createdAt: DateTime!

  """Date time of job last update in ISO 8601 format."""
  updatedAt: DateTime!

  """Job message."""
  message: String
}

"""An enumeration."""
enum JobStatusEnum {
  PENDING
  SUCCESS
  FAILED
  DELETED
}

type AppCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [AppCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type AppCountableEdge {
  """The item at the end of the edge."""
  node: App!

  """A cursor for use in pagination."""
  cursor: String!
}

input AppFilterInput {
  search: String
  isActive: Boolean
  type: AppTypeEnum
}

input AppSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort apps by the selected field."""
  field: AppSortField!
}

enum AppSortField {
  """Sort apps by name."""
  NAME

  """Sort apps by creation date."""
  CREATION_DATE
}

type AppExtensionCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [AppExtensionCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type AppExtensionCountableEdge {
  """The item at the end of the edge."""
  node: AppExtension!

  """A cursor for use in pagination."""
  cursor: String!
}

input AppExtensionFilterInput {
  mount: [AppExtensionMountEnum!]
  target: AppExtensionTargetEnum
}

type AddressValidationData {
  countryCode: String!
  countryName: String!
  addressFormat: String!
  addressLatinFormat: String!
  allowedFields: [String!]!
  requiredFields: [String!]!
  upperFields: [String!]!
  countryAreaType: String!
  countryAreaChoices: [ChoiceValue!]!
  cityType: String!
  cityChoices: [ChoiceValue!]!
  cityAreaType: String!
  cityAreaChoices: [ChoiceValue!]!
  postalCodeType: String!
  postalCodeMatchers: [String!]!
  postalCodeExamples: [String!]!
  postalCodePrefix: String!
}

type ChoiceValue {
  raw: String
  verbose: String
}

"""An enumeration."""
enum CountryCode {
  AF
  AX
  AL
  DZ
  AS
  AD
  AO
  AI
  AQ
  AG
  AR
  AM
  AW
  AU
  AT
  AZ
  BS
  BH
  BD
  BB
  BY
  BE
  BZ
  BJ
  BM
  BT
  BO
  BQ
  BA
  BW
  BV
  BR
  IO
  BN
  BG
  BF
  BI
  CV
  KH
  CM
  CA
  KY
  CF
  TD
  CL
  CN
  CX
  CC
  CO
  KM
  CG
  CD
  CK
  CR
  CI
  HR
  CU
  CW
  CY
  CZ
  DK
  DJ
  DM
  DO
  EC
  EG
  SV
  GQ
  ER
  EE
  SZ
  ET
  EU
  FK
  FO
  FJ
  FI
  FR
  GF
  PF
  TF
  GA
  GM
  GE
  DE
  GH
  GI
  GR
  GL
  GD
  GP
  GU
  GT
  GG
  GN
  GW
  GY
  HT
  HM
  VA
  HN
  HK
  HU
  IS
  IN
  ID
  IR
  IQ
  IE
  IM
  IL
  IT
  JM
  JP
  JE
  JO
  KZ
  KE
  KI
  KW
  KG
  LA
  LV
  LB
  LS
  LR
  LY
  LI
  LT
  LU
  MO
  MG
  MW
  MY
  MV
  ML
  MT
  MH
  MQ
  MR
  MU
  YT
  MX
  FM
  MD
  MC
  MN
  ME
  MS
  MA
  MZ
  MM
  NA
  NR
  NP
  NL
  NC
  NZ
  NI
  NE
  NG
  NU
  NF
  KP
  MK
  MP
  NO
  OM
  PK
  PW
  PS
  PA
  PG
  PY
  PE
  PH
  PN
  PL
  PT
  PR
  QA
  RE
  RO
  RU
  RW
  BL
  SH
  KN
  LC
  MF
  PM
  VC
  WS
  SM
  ST
  SA
  SN
  RS
  SC
  SL
  SG
  SX
  SK
  SI
  SB
  SO
  ZA
  GS
  KR
  SS
  ES
  LK
  SD
  SR
  SJ
  SE
  CH
  SY
  TW
  TJ
  TZ
  TH
  TL
  TG
  TK
  TO
  TT
  TN
  TR
  TM
  TC
  TV
  UG
  UA
  AE
  GB
  UM
  US
  UY
  UZ
  VU
  VE
  VN
  VG
  VI
  WF
  EH
  YE
  ZM
  ZW
}

"""Represents user address data."""
type Address implements Node {
  id: ID!
  firstName: String!
  lastName: String!
  companyName: String!
  streetAddress1: String!
  streetAddress2: String!
  city: String!
  cityArea: String!
  postalCode: String!
  countryArea: String!
  phone: String
}

type UserCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [UserCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type UserCountableEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Represents user data."""
type User implements Node & ObjectWithMetadata {
  id: ID!

  """List of private metadata items. Requires staff permissions to access."""
  privateMetadata: [MetadataItem!]!

  """
  A single key from private metadata. Requires staff permissions to access.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafield(key: String!): String

  """
  Private metadata. Requires staff permissions to access. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  privateMetafields(keys: [String!]): Metadata

  """List of public metadata items. Can be accessed without permissions."""
  metadata: [MetadataItem!]!

  """
  A single key from public metadata.
  
  Tip: Use GraphQL aliases to fetch multiple keys.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafield(key: String!): String

  """
  Public metadata. Use `keys` to control which fields you want to include. The default is to include everything.
  
  Added in Saleor 3.3.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  metafields(keys: [String!]): Metadata
  email: String!
  firstName: String!
  lastName: String!
  isStaff: Boolean!
  isActive: Boolean!

  """List of all user's addresses."""
  addresses: [Address!]

  """
  A note about the customer.
  
  Requires one of the following permissions: MANAGE_USERS, MANAGE_STAFF.
  """
  note: String

  """List of user's permissions."""
  userPermissions: [UserPermission!]

  """List of user's permission groups."""
  permissionGroups: [Group!]

  """List of user's permission groups which user can manage."""
  editableGroups: [Group!]
  avatar(
    """
    Size of the image. If not provided, the original image will be returned.
    """
    size: Int

    """
    The format of the image. When not provided, format of the original image will be used. Must be provided together with the size value, otherwise original image will be returned.
    
    Added in Saleor 3.6.
    
    Note: this API is currently in Feature Preview and can be subject to changes at later point.
    """
    format: ThumbnailFormatEnum
  ): Image

  """
  List of events associated with the user.
  
  Requires one of the following permissions: MANAGE_USERS, MANAGE_STAFF.
  """
  events: [CustomerEvent!]

  """User language code."""
  languageCode: LanguageCodeEnum!
  lastLogin: DateTime
  dateJoined: DateTime!
  updatedAt: DateTime!
}

type UserPermission {
  """Internal code for permission."""
  code: PermissionEnum!

  """Describe action(s) allowed to do by permission."""
  name: String!

  """List of user permission groups which contains this permission."""
  sourcePermissionGroups(
    """ID of user whose groups should be returned."""
    userId: ID!
  ): [Group!]
}

"""Represents permission group data."""
type Group implements Node {
  id: ID!
  name: String!

  """
  List of group users
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  users: [User!]

  """List of group permissions"""
  permissions: [Permission!]

  """
  True, if the currently authenticated user has rights to manage a group.
  """
  userCanManage: Boolean!
}

"""History log of the customer."""
type CustomerEvent implements Node {
  id: ID!

  """Date when event happened at in ISO 8601 format."""
  date: DateTime

  """Customer event type."""
  type: CustomerEventsEnum

  """User who performed the action."""
  user: User

  """App that performed the action."""
  app: App

  """Content of the event."""
  message: String

  """Number of objects concerned by the event."""
  count: Int
}

"""An enumeration."""
enum CustomerEventsEnum {
  ACCOUNT_CREATED
  ACCOUNT_ACTIVATED
  ACCOUNT_DEACTIVATED
  PASSWORD_RESET_LINK_SENT
  PASSWORD_RESET
  EMAIL_CHANGED_REQUEST
  PASSWORD_CHANGED
  EMAIL_CHANGED
  PLACED_ORDER
  NOTE_ADDED_TO_ORDER
  DIGITAL_LINK_DOWNLOADED
  CUSTOMER_DELETED
  NAME_ASSIGNED
  EMAIL_ASSIGNED
  NOTE_ADDED
}

input CustomerFilterInput {
  dateJoined: DateRangeInput
  numberOfOrders: IntRangeInput
  placedOrders: DateRangeInput
  search: String
  metadata: [MetadataFilter!]
  updatedAt: DateTimeRangeInput
}

input DateRangeInput {
  """Start date."""
  gte: Date

  """End date."""
  lte: Date
}

input IntRangeInput {
  """Value greater than or equal to."""
  gte: Int

  """Value less than or equal to."""
  lte: Int
}

input DateTimeRangeInput {
  """Start date."""
  gte: DateTime

  """End date."""
  lte: DateTime
}

input UserSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort users by the selected field."""
  field: UserSortField!
}

enum UserSortField {
  """Sort users by first name."""
  FIRST_NAME

  """Sort users by last name."""
  LAST_NAME

  """Sort users by email."""
  EMAIL

  """Sort users by order count."""
  ORDER_COUNT

  """Sort users by created at."""
  CREATED_AT

  """Sort users by last modified at."""
  LAST_MODIFIED_AT
}

type GroupCountableConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [GroupCountableEdge!]!

  """A total count of items in the collection."""
  totalCount: Int
}

type GroupCountableEdge {
  """The item at the end of the edge."""
  node: Group!

  """A cursor for use in pagination."""
  cursor: String!
}

input PermissionGroupFilterInput {
  search: String
  ids: [ID!]
}

input PermissionGroupSortingInput {
  """Specifies the direction in which to sort products."""
  direction: OrderDirection!

  """Sort permission group by the selected field."""
  field: PermissionGroupSortField!
}

enum PermissionGroupSortField {
  """Sort permission group accounts by name."""
  NAME
}

input StaffUserInput {
  status: StaffMemberStatus
  search: String
  ids: [ID!]
}

enum StaffMemberStatus {
  """User account has been activated."""
  ACTIVE

  """User account has not been activated yet."""
  DEACTIVATED
}

type Mutation {
  """
  Creates a new webhook subscription. 
  
  Requires one of the following permissions: MANAGE_APPS, AUTHENTICATED_APP.
  """
  webhookCreate(
    """Fields required to create a webhook."""
    input: WebhookCreateInput!
  ): WebhookCreate

  """
  Deletes a webhook subscription. 
  
  Requires one of the following permissions: MANAGE_APPS, AUTHENTICATED_APP.
  """
  webhookDelete(
    """ID of a webhook to delete."""
    id: ID!
  ): WebhookDelete

  """
  Updates a webhook subscription. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  webhookUpdate(
    """ID of a webhook to update."""
    id: ID!

    """Fields required to update a webhook."""
    input: WebhookUpdateInput!
  ): WebhookUpdate

  """
  Retries event delivery. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  eventDeliveryRetry(
    """ID of the event delivery to retry."""
    id: ID!
  ): EventDeliveryRetry

  """
  Creates a new post. 
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  postCreate(
    """Fields required to create a post."""
    input: PostCreateInput!
  ): PostCreate

  """
  Deletes a post. 
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  postDelete(
    """ID of a post to delete."""
    id: ID!
  ): PostDelete

  """
  Deletes posts. 
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  postBulkDelete(
    """List of post IDs to delete."""
    ids: [ID!]!
  ): PostBulkDelete

  """
  Publish posts. 
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  postBulkPublish(
    """List of post IDs to (un)publish."""
    ids: [ID!]!

    """Determine if posts will be published or not."""
    isPublished: Boolean!
  ): PostBulkPublish

  """
  Updates an existing post. 
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  postUpdate(
    """ID of a post to update."""
    id: ID!

    """Fields required to update a post."""
    input: PostInput!
  ): PostUpdate

  """
  Creates/updates translations for a post. 
  
  Requires one of the following permissions: MANAGE_TRANSLATIONS.
  """
  postTranslate(
    """Post ID or PostTranslatableContent ID."""
    id: ID!
    input: PostTranslationInput!

    """Translation language code."""
    languageCode: LanguageCodeEnum!
  ): PostTranslate

  """
  Create a media object (image or video URL) associated with post. For image, this mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec 
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  postMediaCreate(
    """Fields required to create a post media."""
    input: PostMediaCreateInput!
  ): PostMediaCreate

  """
  Deletes a post media. 
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  postMediaDelete(
    """ID of a post media to delete."""
    id: ID!
  ): PostMediaDelete

  """
  Deletes product media. 
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  postMediaBulkDelete(
    """List of product media IDs to delete."""
    ids: [ID!]!
  ): PostMediaBulkDelete

  """
  Changes ordering of the post media. 
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  postMediaReorder(
    """IDs of a post media in the desired order."""
    mediaIds: [ID!]!

    """ID of post that media order will be altered."""
    postId: ID!
  ): PostMediaReorder

  """
  Updates a post media. 
  
  Requires one of the following permissions: MANAGE_POSTS.
  """
  postMediaUpdate(
    """ID of a post media to update."""
    id: ID!

    """Fields required to update a post media."""
    input: PostMediaUpdateInput!
  ): PostMediaUpdate

  """
  Create a new post type. 
  
  Requires one of the following permissions: MANAGE_POST_TYPES_AND_ATTRIBUTES.
  """
  postTypeCreate(
    """Fields required to create post type."""
    input: PostTypeCreateInput!
  ): PostTypeCreate

  """
  Update post type. 
  
  Requires one of the following permissions: MANAGE_POST_TYPES_AND_ATTRIBUTES.
  """
  postTypeUpdate(
    """ID of the post type to update."""
    id: ID

    """Fields required to update post type."""
    input: PostTypeCreateInput!
  ): PostTypeUpdate

  """
  Delete a post type. 
  
  Requires one of the following permissions: MANAGE_POST_TYPES_AND_ATTRIBUTES.
  """
  postTypeDelete(
    """ID of the post type to delete."""
    id: ID!
  ): PostTypeDelete

  """
  Delete post types. 
  
  Requires one of the following permissions: MANAGE_POST_TYPES_AND_ATTRIBUTES.
  """
  postTypeBulkDelete(
    """List of post type IDs to delete"""
    ids: [ID!]!
  ): PostTypeBulkDelete

  """
  Creates a new page. 
  
  Requires one of the following permissions: MANAGE_PAGES.
  """
  pageCreate(
    """Fields required to create a page."""
    input: PageCreateInput!
  ): PageCreate

  """
  Deletes a page. 
  
  Requires one of the following permissions: MANAGE_PAGES.
  """
  pageDelete(
    """ID of a page to delete."""
    id: ID!
  ): PageDelete

  """
  Deletes pages. 
  
  Requires one of the following permissions: MANAGE_PAGES.
  """
  pageBulkDelete(
    """List of page IDs to delete."""
    ids: [ID!]!
  ): PageBulkDelete

  """
  Publish pages. 
  
  Requires one of the following permissions: MANAGE_PAGES.
  """
  pageBulkPublish(
    """List of page IDs to (un)publish."""
    ids: [ID!]!

    """Determine if pages will be published or not."""
    isPublished: Boolean!
  ): PageBulkPublish

  """
  Updates an existing page. 
  
  Requires one of the following permissions: MANAGE_PAGES.
  """
  pageUpdate(
    """ID of a page to update."""
    id: ID!

    """Fields required to update a page."""
    input: PageInput!
  ): PageUpdate

  """
  Creates/updates translations for a page. 
  
  Requires one of the following permissions: MANAGE_TRANSLATIONS.
  """
  pageTranslate(
    """Page ID or PageTranslatableContent ID."""
    id: ID!
    input: PageTranslationInput!

    """Translation language code."""
    languageCode: LanguageCodeEnum!
  ): PageTranslate

  """
  Create a new page type. 
  
  Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
  """
  pageTypeCreate(
    """Fields required to create page type."""
    input: PageTypeCreateInput!
  ): PageTypeCreate

  """
  Update page type. 
  
  Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
  """
  pageTypeUpdate(
    """ID of the page type to update."""
    id: ID

    """Fields required to update page type."""
    input: PageTypeCreateInput!
  ): PageTypeUpdate

  """
  Delete a page type. 
  
  Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
  """
  pageTypeDelete(
    """ID of the page type to delete."""
    id: ID!
  ): PageTypeDelete

  """
  Delete page types. 
  
  Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
  """
  pageTypeBulkDelete(
    """List of page type IDs to delete"""
    ids: [ID!]!
  ): PageTypeBulkDelete

  """
  Delete metadata of an object. To use it, you need to have access to the modified object.
  """
  deleteMetadata(
    """ID or token (for Order and Checkout) of an object to update."""
    id: ID!

    """Metadata keys to delete."""
    keys: [String!]!
  ): DeleteMetadata

  """
  Delete object's private metadata. To use it, you need to be an authenticated staff user or an app and have access to the modified object.
  """
  deletePrivateMetadata(
    """ID or token (for Order and Checkout) of an object to update."""
    id: ID!

    """Metadata keys to delete."""
    keys: [String!]!
  ): DeletePrivateMetadata

  """
  Updates metadata of an object. To use it, you need to have access to the modified object.
  """
  updateMetadata(
    """ID or token (for Order and Checkout) of an object to update."""
    id: ID!

    """Fields required to update the object's metadata."""
    input: [MetadataInput!]!
  ): UpdateMetadata

  """
  Updates private metadata of an object. To use it, you need to be an authenticated staff user or an app and have access to the modified object.
  """
  updatePrivateMetadata(
    """ID or token (for Order and Checkout) of an object to update."""
    id: ID!

    """Fields required to update the object's metadata."""
    input: [MetadataInput!]!
  ): UpdatePrivateMetadata

  """
  Assigns storefront's navigation menus. 
  
  Requires one of the following permissions: MANAGE_MENUS, MANAGE_SETTINGS.
  """
  assignNavigation(
    """ID of the menu."""
    menu: ID

    """Type of the navigation bar to assign the menu to."""
    navigationType: NavigationType!
  ): AssignNavigation

  """
  Creates a new Menu. 
  
  Requires one of the following permissions: MANAGE_MENUS.
  """
  menuCreate(
    """Fields required to create a menu."""
    input: MenuCreateInput!
  ): MenuCreate

  """
  Deletes a menu. 
  
  Requires one of the following permissions: MANAGE_MENUS.
  """
  menuDelete(
    """ID of a menu to delete."""
    id: ID!
  ): MenuDelete

  """
  Deletes menus. 
  
  Requires one of the following permissions: MANAGE_MENUS.
  """
  menuBulkDelete(
    """List of menu IDs to delete."""
    ids: [ID!]!
  ): MenuBulkDelete

  """
  Updates a menu. 
  
  Requires one of the following permissions: MANAGE_MENUS.
  """
  menuUpdate(
    """ID of a menu to update."""
    id: ID!

    """Fields required to update a menu."""
    input: MenuInput!
  ): MenuUpdate

  """
  Creates a new menu item. 
  
  Requires one of the following permissions: MANAGE_MENUS.
  """
  menuItemCreate(
    """
    Fields required to update a menu item. Only one of `url`, `category`, `page`, `collection` is allowed per item.
    """
    input: MenuItemCreateInput!
  ): MenuItemCreate

  """
  Deletes a menu item. 
  
  Requires one of the following permissions: MANAGE_MENUS.
  """
  menuItemDelete(
    """ID of a menu item to delete."""
    id: ID!
  ): MenuItemDelete

  """
  Deletes menu items. 
  
  Requires one of the following permissions: MANAGE_MENUS.
  """
  menuItemBulkDelete(
    """List of menu item IDs to delete."""
    ids: [ID!]!
  ): MenuItemBulkDelete

  """
  Updates a menu item. 
  
  Requires one of the following permissions: MANAGE_MENUS.
  """
  menuItemUpdate(
    """ID of a menu item to update."""
    id: ID!

    """
    Fields required to update a menu item. Only one of `url`, `category`, `page`, `collection` is allowed per item.
    """
    input: MenuItemInput!
  ): MenuItemUpdate

  """
  Creates/updates translations for a menu item. 
  
  Requires one of the following permissions: MANAGE_TRANSLATIONS.
  """
  menuItemTranslate(
    """MenuItem ID or MenuItemTranslatableContent ID."""
    id: ID!
    input: NameTranslationInput!

    """Translation language code."""
    languageCode: LanguageCodeEnum!
  ): MenuItemTranslate

  """
  Moves items of menus. 
  
  Requires one of the following permissions: MANAGE_MENUS.
  """
  menuItemMove(
    """ID of the menu."""
    menu: ID!

    """The menu position data."""
    moves: [MenuItemMoveInput!]!
  ): MenuItemMove

  """
  Update plugin configuration. 
  
  Requires one of the following permissions: MANAGE_PLUGINS.
  """
  pluginUpdate(
    """ID of a channel for which the data should be modified."""
    channelId: ID

    """ID of plugin to update."""
    id: ID!

    """Fields required to update a plugin configuration."""
    input: PluginUpdateInput!
  ): PluginUpdate

  """
  Trigger sending a notification with the notify plugin method. Serializes nodes provided as ids parameter and includes this data in the notification payload.
  
  Added in Saleor 3.1.
  """
  externalNotificationTrigger(
    """
    Channel slug. Saleor will send a notification within a provided channel. Please, make sure that necessary plugins are active.
    """
    channel: String!

    """Input for External Notification Trigger."""
    input: ExternalNotificationTriggerInput!

    """The ID of notification plugin."""
    pluginId: String
  ): ExternalNotificationTrigger

  """
  Upload a file. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec 
  
  Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
  """
  fileUpload(
    """Represents a file in a multipart request."""
    file: Upload!
  ): FileUpload

  """
  Creates new channel. 
  
  Requires one of the following permissions: MANAGE_CHANNELS.
  """
  channelCreate(
    """Fields required to create channel."""
    input: ChannelCreateInput!
  ): ChannelCreate

  """
  Update a channel. 
  
  Requires one of the following permissions: MANAGE_CHANNELS.
  """
  channelUpdate(
    """ID of a channel to update."""
    id: ID!

    """Fields required to update a channel."""
    input: ChannelUpdateInput!
  ): ChannelUpdate

  """
  Delete a channel. Orders associated with the deleted channel will be moved to the target channel. Checkouts, product availability, and pricing will be removed. 
  
  Requires one of the following permissions: MANAGE_CHANNELS.
  """
  channelDelete(
    """ID of a channel to delete."""
    id: ID!

    """Fields required to delete a channel."""
    input: ChannelDeleteInput
  ): ChannelDelete

  """
  Activate a channel. 
  
  Requires one of the following permissions: MANAGE_CHANNELS.
  """
  channelActivate(
    """ID of the channel to activate."""
    id: ID!
  ): ChannelActivate

  """
  Deactivate a channel. 
  
  Requires one of the following permissions: MANAGE_CHANNELS.
  """
  channelDeactivate(
    """ID of the channel to deactivate."""
    id: ID!
  ): ChannelDeactivate

  """
  Creates a new app. Requires the following permissions: AUTHENTICATED_STAFF_USER and MANAGE_APPS.
  """
  appCreate(
    """Fields required to create a new app."""
    input: AppInput!
  ): AppCreate

  """
  Updates an existing app. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  appUpdate(
    """ID of an app to update."""
    id: ID!

    """Fields required to update an existing app."""
    input: AppInput!
  ): AppUpdate

  """
  Deletes an app. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  appDelete(
    """ID of an app to delete."""
    id: ID!
  ): AppDelete

  """
  Creates a new token. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  appTokenCreate(
    """Fields required to create a new auth token."""
    input: AppTokenInput!
  ): AppTokenCreate

  """
  Deletes an authentication token assigned to app. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  appTokenDelete(
    """ID of an auth token to delete."""
    id: ID!
  ): AppTokenDelete

  """Verify provided app token."""
  appTokenVerify(
    """App token to verify."""
    token: String!
  ): AppTokenVerify

  """
  Install new app by using app manifest. Requires the following permissions: AUTHENTICATED_STAFF_USER and MANAGE_APPS.
  """
  appInstall(
    """Fields required to install a new app."""
    input: AppInstallInput!
  ): AppInstall

  """
  Retry failed installation of new app. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  appRetryInstall(
    """Determine if app will be set active or not."""
    activateAfterInstallation: Boolean = true

    """ID of failed installation."""
    id: ID!
  ): AppRetryInstall

  """
  Delete failed installation. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  appDeleteFailedInstallation(
    """ID of failed installation to delete."""
    id: ID!
  ): AppDeleteFailedInstallation

  """
  Fetch and validate manifest. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  appFetchManifest(manifestUrl: String!): AppFetchManifest

  """
  Activate the app. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  appActivate(
    """ID of app to activate."""
    id: ID!
  ): AppActivate

  """
  Deactivate the app. 
  
  Requires one of the following permissions: MANAGE_APPS.
  """
  appDeactivate(
    """ID of app to deactivate."""
    id: ID!
  ): AppDeactivate

  """Create JWT token."""
  tokenCreate(
    """Email of a user."""
    email: String!

    """Password of a user."""
    password: String!
  ): CreateToken

  """
  Refresh JWT token. Mutation tries to take refreshToken from the input.If it fails it will try to take refreshToken from the http-only cookie -refreshToken. csrfToken is required when refreshToken is provided as a cookie.
  """
  tokenRefresh(
    """
    CSRF token required to refresh token. This argument is required when refreshToken is provided as a cookie.
    """
    csrfToken: String

    """Refresh token."""
    refreshToken: String
  ): RefreshToken

  """Verify JWT token."""
  tokenVerify(
    """JWT token to validate."""
    token: String!
  ): VerifyToken

  """
  Deactivate all JWT tokens of the currently authenticated user. 
  
  Requires one of the following permissions: AUTHENTICATED_USER.
  """
  tokensDeactivateAll: DeactivateAllUserTokens

  """Prepare external authentication url for user by custom plugin."""
  externalAuthenticationUrl(
    """The data required by plugin to create external authentication url."""
    input: JSONString!

    """The ID of the authentication plugin."""
    pluginId: String!
  ): ExternalAuthenticationUrl

  """Obtain external access tokens for user by custom plugin."""
  externalObtainAccessTokens(
    """The data required by plugin to create authentication data."""
    input: JSONString!

    """The ID of the authentication plugin."""
    pluginId: String!
  ): ExternalObtainAccessTokens

  """Refresh user's access by custom plugin."""
  externalRefresh(
    """The data required by plugin to proceed the refresh process."""
    input: JSONString!

    """The ID of the authentication plugin."""
    pluginId: String!
  ): ExternalRefresh

  """Logout user by custom plugin."""
  externalLogout(
    """The data required by plugin to proceed the logout process."""
    input: JSONString!

    """The ID of the authentication plugin."""
    pluginId: String!
  ): ExternalLogout

  """Verify external authentication data by plugin."""
  externalVerify(
    """The data required by plugin to proceed the verification."""
    input: JSONString!

    """The ID of the authentication plugin."""
    pluginId: String!
  ): ExternalVerify

  """Sends an email with the account password modification link."""
  requestPasswordReset(
    """
    Slug of a channel which will be used for notify user. Optional when only one channel exists.
    """
    channel: String

    """Email of the user that will be used for password recovery."""
    email: String!

    """
    URL of a view where users should be redirected to reset the password. URL in RFC 1808 format.
    """
    redirectUrl: String!
  ): RequestPasswordReset

  """Confirm user account with token sent by email during registration."""
  confirmAccount(
    """E-mail of the user performing account confirmation."""
    email: String!

    """A one-time token required to confirm the account."""
    token: String!
  ): ConfirmAccount

  """
  Sets the user's password from the token sent by email using the RequestPasswordReset mutation.
  """
  setPassword(
    """Email of a user."""
    email: String!

    """Password of a user."""
    password: String!

    """A one-time token required to set the password."""
    token: String!
  ): SetPassword

  """
  Change the password of the logged in user. 
  
  Requires one of the following permissions: AUTHENTICATED_USER.
  """
  passwordChange(
    """New user password."""
    newPassword: String!

    """Current user password."""
    oldPassword: String!
  ): PasswordChange

  """
  Request email change of the logged in user. 
  
  Requires one of the following permissions: AUTHENTICATED_USER.
  """
  requestEmailChange(
    """
    Slug of a channel which will be used to notify users. Optional when only one channel exists.
    """
    channel: String

    """New user email."""
    newEmail: String!

    """User password."""
    password: String!

    """
    URL of a view where users should be redirected to update the email address. URL in RFC 1808 format.
    """
    redirectUrl: String!
  ): RequestEmailChange

  """
  Confirm the email change of the logged-in user. 
  
  Requires one of the following permissions: AUTHENTICATED_USER.
  """
  confirmEmailChange(
    """
    Slug of a channel which will be used to notify users. Optional when only one channel exists.
    """
    channel: String

    """A one-time token required to change the email."""
    token: String!
  ): ConfirmEmailChange

  """
  Create a new address for the customer. 
  
  Requires one of the following permissions: AUTHENTICATED_USER.
  """
  accountAddressCreate(
    """Fields required to create address."""
    input: AddressInput!
  ): AccountAddressCreate

  """
  Updates an address of the logged-in user. Requires one of the following permissions: MANAGE_USERS, IS_OWNER.
  """
  accountAddressUpdate(
    """ID of the address to update."""
    id: ID!

    """Fields required to update the address."""
    input: AddressInput!
  ): AccountAddressUpdate

  """
  Delete an address of the logged-in user. Requires one of the following permissions: MANAGE_USERS, IS_OWNER.
  """
  accountAddressDelete(
    """ID of the address to delete."""
    id: ID!
  ): AccountAddressDelete

  """
  Sets a default address for the authenticated user. 
  
  Requires one of the following permissions: AUTHENTICATED_USER.
  """
  accountSetDefaultAddress(
    """ID of the address to set as default."""
    id: ID!
  ): AccountSetDefaultAddress

  """Register a new user."""
  accountRegister(
    """Fields required to create a user."""
    input: AccountRegisterInput!
  ): AccountRegister

  """
  Updates the account of the logged-in user. 
  
  Requires one of the following permissions: AUTHENTICATED_USER.
  """
  accountUpdate(
    """Fields required to update the account of the logged-in user."""
    input: AccountInput!
  ): AccountUpdate

  """
  Sends an email with the account removal link for the logged-in user. 
  
  Requires one of the following permissions: AUTHENTICATED_USER.
  """
  accountRequestDeletion(
    """
    Slug of a channel which will be used to notify users. Optional when only one channel exists.
    """
    channel: String

    """
    URL of a view where users should be redirected to delete their account. URL in RFC 1808 format.
    """
    redirectUrl: String!
  ): AccountRequestDeletion

  """
  Remove user account. 
  
  Requires one of the following permissions: AUTHENTICATED_USER.
  """
  accountDelete(
    """
    A one-time token required to remove account. Sent by email using AccountRequestDeletion mutation.
    """
    token: String!
  ): AccountDelete

  """
  Creates user address. 
  
  Requires one of the following permissions: MANAGE_USERS.
  """
  addressCreate(
    """Fields required to create address."""
    input: AddressInput!

    """ID of a user to create address for."""
    userId: ID!
  ): AddressCreate

  """
  Updates an address. 
  
  Requires one of the following permissions: MANAGE_USERS.
  """
  addressUpdate(
    """ID of the address to update."""
    id: ID!

    """Fields required to update the address."""
    input: AddressInput!
  ): AddressUpdate

  """
  Deletes an address. 
  
  Requires one of the following permissions: MANAGE_USERS.
  """
  addressDelete(
    """ID of the address to delete."""
    id: ID!
  ): AddressDelete

  """
  Sets a default address for the given user. 
  
  Requires one of the following permissions: MANAGE_USERS.
  """
  addressSetDefault(
    """ID of the address."""
    addressId: ID!

    """ID of the user to change the address for."""
    userId: ID!
  ): AddressSetDefault

  """
  Creates a new customer. 
  
  Requires one of the following permissions: MANAGE_USERS.
  """
  customerCreate(
    """Fields required to create a customer."""
    input: UserCreateInput!
  ): CustomerCreate

  """
  Updates an existing customer. 
  
  Requires one of the following permissions: MANAGE_USERS.
  """
  customerUpdate(
    """ID of a customer to update."""
    id: ID!

    """Fields required to update a customer."""
    input: CustomerInput!
  ): CustomerUpdate

  """
  Deletes a customer. 
  
  Requires one of the following permissions: MANAGE_USERS.
  """
  customerDelete(
    """ID of a customer to delete."""
    id: ID!
  ): CustomerDelete

  """
  Deletes customers. 
  
  Requires one of the following permissions: MANAGE_USERS.
  """
  customerBulkDelete(
    """List of user IDs to delete."""
    ids: [ID!]!
  ): CustomerBulkDelete

  """
  Creates a new staff user. Apps are not allowed to perform this mutation. 
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  staffCreate(
    """Fields required to create a staff user."""
    input: StaffCreateInput!
  ): StaffCreate

  """
  Updates an existing staff user. Apps are not allowed to perform this mutation. 
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  staffUpdate(
    """ID of a staff user to update."""
    id: ID!

    """Fields required to update a staff user."""
    input: StaffUpdateInput!
  ): StaffUpdate

  """
  Deletes a staff user. Apps are not allowed to perform this mutation. 
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  staffDelete(
    """ID of a staff user to delete."""
    id: ID!
  ): StaffDelete

  """
  Deletes staff users. Apps are not allowed to perform this mutation. 
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  staffBulkDelete(
    """List of user IDs to delete."""
    ids: [ID!]!
  ): StaffBulkDelete

  """
  Create a user avatar. Only for staff members. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec 
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER.
  """
  userAvatarUpdate(
    """Represents an image file in a multipart request."""
    image: Upload!
  ): UserAvatarUpdate

  """
  Deletes a user avatar. Only for staff members. 
  
  Requires one of the following permissions: AUTHENTICATED_STAFF_USER.
  """
  userAvatarDelete: UserAvatarDelete

  """
  Activate or deactivate users. 
  
  Requires one of the following permissions: MANAGE_USERS.
  """
  userBulkSetActive(
    """List of user IDs to (de)activate)."""
    ids: [ID!]!

    """Determine if users will be set active or not."""
    isActive: Boolean!
  ): UserBulkSetActive

  """
  Create new permission group. Apps are not allowed to perform this mutation. 
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  permissionGroupCreate(
    """Input fields to create permission group."""
    input: PermissionGroupCreateInput!
  ): PermissionGroupCreate

  """
  Update permission group. Apps are not allowed to perform this mutation. 
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  permissionGroupUpdate(
    """ID of the group to update."""
    id: ID!

    """Input fields to create permission group."""
    input: PermissionGroupUpdateInput!
  ): PermissionGroupUpdate

  """
  Delete permission group. Apps are not allowed to perform this mutation. 
  
  Requires one of the following permissions: MANAGE_STAFF.
  """
  permissionGroupDelete(
    """ID of the group to delete."""
    id: ID!
  ): PermissionGroupDelete
}

"""
Creates a new webhook subscription. 

Requires one of the following permissions: MANAGE_APPS, AUTHENTICATED_APP.
"""
type WebhookCreate {
  webhookErrors: [WebhookError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WebhookError!]!
  webhook: Webhook
}

type WebhookError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: WebhookErrorCode!
}

"""An enumeration."""
enum WebhookErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
}

input WebhookCreateInput {
  """The name of the webhook."""
  name: String

  """The url to receive the payload."""
  targetUrl: String

  """
  The events that webhook wants to subscribe. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `asyncEvents` or `syncEvents` instead.
  """
  events: [WebhookEventTypeEnum!]

  """The asynchronous events that webhook wants to subscribe."""
  asyncEvents: [WebhookEventTypeAsyncEnum!]

  """ID of the app to which webhook belongs."""
  app: ID

  """Determine if webhook will be set active or not."""
  isActive: Boolean

  """The secret key used to create a hash signature with each payload."""
  secretKey: String

  """
  Subscription query used to define a webhook payload.
  
  Added in Saleor 3.2.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  query: String
}

"""
Deletes a webhook subscription. 

Requires one of the following permissions: MANAGE_APPS, AUTHENTICATED_APP.
"""
type WebhookDelete {
  webhookErrors: [WebhookError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WebhookError!]!
  webhook: Webhook
}

"""
Updates a webhook subscription. 

Requires one of the following permissions: MANAGE_APPS.
"""
type WebhookUpdate {
  webhookErrors: [WebhookError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [WebhookError!]!
  webhook: Webhook
}

input WebhookUpdateInput {
  """The new name of the webhook."""
  name: String

  """The url to receive the payload."""
  targetUrl: String

  """
  The events that webhook wants to subscribe. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `asyncEvents` or `syncEvents` instead.
  """
  events: [WebhookEventTypeEnum!]

  """The asynchronous events that webhook wants to subscribe."""
  asyncEvents: [WebhookEventTypeAsyncEnum!]

  """ID of the app to which webhook belongs."""
  app: ID

  """Determine if webhook will be set active or not."""
  isActive: Boolean

  """Use to create a hash signature with each payload."""
  secretKey: String

  """
  Subscription query used to define a webhook payload.
  
  Added in Saleor 3.2.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  query: String
}

"""
Retries event delivery. 

Requires one of the following permissions: MANAGE_APPS.
"""
type EventDeliveryRetry {
  """Event delivery."""
  delivery: EventDelivery
  errors: [WebhookError!]!
}

"""
Creates a new post. 

Requires one of the following permissions: MANAGE_POSTS.
"""
type PostCreate {
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
  post: Post
}

type PostError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: PostErrorCode!

  """List of attributes IDs which causes the error."""
  attributes: [ID!]

  """List of attribute values IDs which causes the error."""
  values: [ID!]
}

"""An enumeration."""
enum PostErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  DUPLICATED_INPUT_ITEM
  ATTRIBUTE_ALREADY_ASSIGNED
  UNSUPPORTED_MEDIA_PROVIDER
  MEDIA_ALREADY_ASSIGNED
  NOT_POSTS_IMAGE
}

input PostCreateInput {
  """Post internal name."""
  slug: String

  """Post title."""
  title: String

  """
  Post content.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """Determines if post is visible in the storefront."""
  isPublished: Boolean

  """
  Publication date. ISO 8601 standard. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `publishedAt` field instead.
  """
  publicationDate: String

  """
  Publication date time. ISO 8601 standard.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime

  """Search engine optimization fields."""
  seo: SeoInput

  """Th original post url."""
  externalUrl: String

  """ID of the post type that post belongs to."""
  postType: ID!
}

input SeoInput {
  """SEO title."""
  title: String

  """SEO description."""
  description: String
}

"""
Deletes a post. 

Requires one of the following permissions: MANAGE_POSTS.
"""
type PostDelete {
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
  post: Post
}

"""
Deletes posts. 

Requires one of the following permissions: MANAGE_POSTS.
"""
type PostBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
}

"""
Publish posts. 

Requires one of the following permissions: MANAGE_POSTS.
"""
type PostBulkPublish {
  """Returns how many objects were affected."""
  count: Int!
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
}

"""
Updates an existing post. 

Requires one of the following permissions: MANAGE_POSTS.
"""
type PostUpdate {
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
  post: Post
}

input PostInput {
  """Post internal name."""
  slug: String

  """Post title."""
  title: String

  """
  Post content.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """Determines if post is visible in the storefront."""
  isPublished: Boolean

  """
  Publication date. ISO 8601 standard. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `publishedAt` field instead.
  """
  publicationDate: String

  """
  Publication date time. ISO 8601 standard.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime

  """Search engine optimization fields."""
  seo: SeoInput

  """Th original post url."""
  externalUrl: String
}

"""
Creates/updates translations for a post. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type PostTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  post: PostTranslatableContent
}

type TranslationError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: TranslationErrorCode!
}

"""An enumeration."""
enum TranslationErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
}

input PostTranslationInput {
  seoTitle: String
  seoDescription: String
  title: String

  """
  Translated page content.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString
}

"""
Create a media object (image or video URL) associated with post. For image, this mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec 

Requires one of the following permissions: MANAGE_POSTS.
"""
type PostMediaCreate {
  post: Post
  media: PostMedia
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
}

input PostMediaCreateInput {
  """Alt text for a post media."""
  alt: String

  """Represents an image file in a multipart request."""
  image: Upload

  """ID of an post."""
  post: ID!

  """Represents an URL to an external media."""
  mediaUrl: String
}

"""
Variables of this type must be set to null in mutations. They will be replaced with a filename from a following multipart part containing a binary file. See: https://github.com/jaydenseric/graphql-multipart-request-spec.
"""
scalar Upload

"""
Deletes a post media. 

Requires one of the following permissions: MANAGE_POSTS.
"""
type PostMediaDelete {
  post: Post
  media: PostMedia
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
}

"""
Deletes product media. 

Requires one of the following permissions: MANAGE_POSTS.
"""
type PostMediaBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
}

"""
Changes ordering of the post media. 

Requires one of the following permissions: MANAGE_POSTS.
"""
type PostMediaReorder {
  post: Post
  media: [PostMedia!]
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
}

"""
Updates a post media. 

Requires one of the following permissions: MANAGE_POSTS.
"""
type PostMediaUpdate {
  post: Post
  media: PostMedia
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
}

input PostMediaUpdateInput {
  """Alt text for a post media."""
  alt: String
}

"""
Create a new post type. 

Requires one of the following permissions: MANAGE_POST_TYPES_AND_ATTRIBUTES.
"""
type PostTypeCreate {
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
  postType: PostType
}

input PostTypeCreateInput {
  """Name of the post type."""
  name: String

  """Post type slug."""
  slug: String
}

"""
Update post type. 

Requires one of the following permissions: MANAGE_POST_TYPES_AND_ATTRIBUTES.
"""
type PostTypeUpdate {
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
  postType: PostType
}

"""
Delete a post type. 

Requires one of the following permissions: MANAGE_POST_TYPES_AND_ATTRIBUTES.
"""
type PostTypeDelete {
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
  postType: PostType
}

"""
Delete post types. 

Requires one of the following permissions: MANAGE_POST_TYPES_AND_ATTRIBUTES.
"""
type PostTypeBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  postErrors: [PostError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PostError!]!
}

"""
Creates a new page. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageCreate {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  page: Page
}

type PageError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: PageErrorCode!

  """List of attributes IDs which causes the error."""
  attributes: [ID!]

  """List of attribute values IDs which causes the error."""
  values: [ID!]
}

"""An enumeration."""
enum PageErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  DUPLICATED_INPUT_ITEM
  ATTRIBUTE_ALREADY_ASSIGNED
}

input PageCreateInput {
  """Page internal name."""
  slug: String

  """Page title."""
  title: String

  """
  Page content.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """Determines if page is visible in the storefront."""
  isPublished: Boolean

  """
  Publication date. ISO 8601 standard. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `publishedAt` field instead.
  """
  publicationDate: String

  """
  Publication date time. ISO 8601 standard.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime

  """Search engine optimization fields."""
  seo: SeoInput

  """ID of the page type that page belongs to."""
  pageType: ID!
}

"""
Deletes a page. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageDelete {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  page: Page
}

"""
Deletes pages. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
}

"""
Publish pages. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageBulkPublish {
  """Returns how many objects were affected."""
  count: Int!
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
}

"""
Updates an existing page. 

Requires one of the following permissions: MANAGE_PAGES.
"""
type PageUpdate {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  page: Page
}

input PageInput {
  """Page internal name."""
  slug: String

  """Page title."""
  title: String

  """
  Page content.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString

  """Determines if page is visible in the storefront."""
  isPublished: Boolean

  """
  Publication date. ISO 8601 standard. 
  
  DEPRECATED: this field will be removed in Saleor 4.0. Use `publishedAt` field instead.
  """
  publicationDate: String

  """
  Publication date time. ISO 8601 standard.
  
  Added in Saleor 3.3.
  """
  publishedAt: DateTime

  """Search engine optimization fields."""
  seo: SeoInput
}

"""
Creates/updates translations for a page. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type PageTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  page: PageTranslatableContent
}

input PageTranslationInput {
  seoTitle: String
  seoDescription: String
  title: String

  """
  Translated page content.
  
  Rich text format. For reference see https://editorjs.io/
  """
  content: JSONString
}

"""
Create a new page type. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageTypeCreate {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  pageType: PageType
}

input PageTypeCreateInput {
  """Name of the page type."""
  name: String

  """Page type slug."""
  slug: String
}

"""
Update page type. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageTypeUpdate {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  pageType: PageType
}

"""
Delete a page type. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageTypeDelete {
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
  pageType: PageType
}

"""
Delete page types. 

Requires one of the following permissions: MANAGE_PAGE_TYPES_AND_ATTRIBUTES.
"""
type PageTypeBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  pageErrors: [PageError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PageError!]!
}

"""
Delete metadata of an object. To use it, you need to have access to the modified object.
"""
type DeleteMetadata {
  metadataErrors: [MetadataError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MetadataError!]!
  item: ObjectWithMetadata
}

type MetadataError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: MetadataErrorCode!
}

"""An enumeration."""
enum MetadataErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  NOT_UPDATED
}

"""
Delete object's private metadata. To use it, you need to be an authenticated staff user or an app and have access to the modified object.
"""
type DeletePrivateMetadata {
  metadataErrors: [MetadataError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MetadataError!]!
  item: ObjectWithMetadata
}

"""
Updates metadata of an object. To use it, you need to have access to the modified object.
"""
type UpdateMetadata {
  metadataErrors: [MetadataError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MetadataError!]!
  item: ObjectWithMetadata
}

input MetadataInput {
  """Key of a metadata item."""
  key: String!

  """Value of a metadata item."""
  value: String!
}

"""
Updates private metadata of an object. To use it, you need to be an authenticated staff user or an app and have access to the modified object.
"""
type UpdatePrivateMetadata {
  metadataErrors: [MetadataError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MetadataError!]!
  item: ObjectWithMetadata
}

"""
Assigns storefront's navigation menus. 

Requires one of the following permissions: MANAGE_MENUS, MANAGE_SETTINGS.
"""
type AssignNavigation {
  """Assigned navigation menu."""
  menu: Menu
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
}

type MenuError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: MenuErrorCode!
}

"""An enumeration."""
enum MenuErrorCode {
  CANNOT_ASSIGN_NODE
  GRAPHQL_ERROR
  INVALID
  INVALID_MENU_ITEM
  NO_MENU_ITEM_PROVIDED
  NOT_FOUND
  REQUIRED
  TOO_MANY_MENU_ITEMS
  UNIQUE
}

enum NavigationType {
  """Main storefront navigation."""
  MAIN

  """Secondary storefront navigation."""
  SECONDARY
}

"""
Creates a new Menu. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuCreate {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menu: Menu
}

input MenuCreateInput {
  """Name of the menu."""
  name: String!

  """Slug of the menu. Will be generated if not provided."""
  slug: String

  """List of menu items."""
  items: [MenuItemInput!]
}

input MenuItemInput {
  """Name of the menu item."""
  name: String

  """URL of the pointed item."""
  url: String

  """Category to which item points."""
  category: ID

  """Collection to which item points."""
  collection: ID

  """Page to which item points."""
  page: ID
}

"""
Deletes a menu. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuDelete {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menu: Menu
}

"""
Deletes menus. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
}

"""
Updates a menu. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuUpdate {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menu: Menu
}

input MenuInput {
  """Name of the menu."""
  name: String

  """Slug of the menu."""
  slug: String
}

"""
Creates a new menu item. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuItemCreate {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menuItem: MenuItem
}

input MenuItemCreateInput {
  """Name of the menu item."""
  name: String!

  """URL of the pointed item."""
  url: String

  """Category to which item points."""
  category: ID

  """Collection to which item points."""
  collection: ID

  """Page to which item points."""
  page: ID

  """Menu to which item belongs."""
  menu: ID!

  """ID of the parent menu. If empty, menu will be top level menu."""
  parent: ID
}

"""
Deletes a menu item. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuItemDelete {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menuItem: MenuItem
}

"""
Deletes menu items. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuItemBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
}

"""
Updates a menu item. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuItemUpdate {
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
  menuItem: MenuItem
}

"""
Creates/updates translations for a menu item. 

Requires one of the following permissions: MANAGE_TRANSLATIONS.
"""
type MenuItemTranslate {
  translationErrors: [TranslationError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [TranslationError!]!
  menuItem: MenuItem
}

input NameTranslationInput {
  name: String
}

"""
Moves items of menus. 

Requires one of the following permissions: MANAGE_MENUS.
"""
type MenuItemMove {
  """Assigned menu to move within."""
  menu: Menu
  menuErrors: [MenuError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [MenuError!]!
}

input MenuItemMoveInput {
  """The menu item ID to move."""
  itemId: ID!

  """ID of the parent menu. If empty, menu will be top level menu."""
  parentId: ID

  """
  The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.
  """
  sortOrder: Int
}

"""
Update plugin configuration. 

Requires one of the following permissions: MANAGE_PLUGINS.
"""
type PluginUpdate {
  plugin: Plugin
  pluginsErrors: [PluginError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PluginError!]!
}

type PluginError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: PluginErrorCode!
}

"""An enumeration."""
enum PluginErrorCode {
  GRAPHQL_ERROR
  INVALID
  PLUGIN_MISCONFIGURED
  NOT_FOUND
  REQUIRED
  UNIQUE
}

input PluginUpdateInput {
  """Indicates whether the plugin should be enabled."""
  active: Boolean

  """Configuration of the plugin."""
  configuration: [ConfigurationItemInput!]
}

input ConfigurationItemInput {
  """Name of the field to update."""
  name: String!

  """Value of the given field to update."""
  value: String
}

"""
Trigger sending a notification with the notify plugin method. Serializes nodes provided as ids parameter and includes this data in the notification payload.

Added in Saleor 3.1.
"""
type ExternalNotificationTrigger {
  errors: [ExternalNotificationError!]!
}

type ExternalNotificationError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ExternalNotificationErrorCodes!
}

"""An enumeration."""
enum ExternalNotificationErrorCodes {
  REQUIRED
  INVALID_MODEL_TYPE
  NOT_FOUND
  CHANNEL_INACTIVE
}

input ExternalNotificationTriggerInput {
  """
  The list of customers or orders node IDs that will be serialized and included in the notification payload.
  """
  ids: [ID!]!

  """
  Additional payload that will be merged with the one based on the bussines object ID.
  """
  extraPayload: JSONString

  """
  External event type. This field is passed to a plugin as an event type.
  """
  externalEventType: String!
}

"""
Upload a file. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec 

Requires one of the following permissions: AUTHENTICATED_APP, AUTHENTICATED_STAFF_USER.
"""
type FileUpload {
  uploadedFile: File
  uploadErrors: [UploadError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [UploadError!]!
}

type File {
  """The URL of the file."""
  url: String!

  """Content type of the file."""
  contentType: String
}

type UploadError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: UploadErrorCode!
}

"""An enumeration."""
enum UploadErrorCode {
  GRAPHQL_ERROR
}

"""
Creates new channel. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelCreate {
  channelErrors: [ChannelError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ChannelError!]!
  channel: Channel
}

type ChannelError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: ChannelErrorCode!
}

"""An enumeration."""
enum ChannelErrorCode {
  ALREADY_EXISTS
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  CHANNELS_CURRENCY_MUST_BE_THE_SAME
  CHANNEL_WITH_ORDERS
  DUPLICATED_INPUT_ITEM
}

input ChannelCreateInput {
  """isActive flag."""
  isActive: Boolean

  """Name of the channel."""
  name: String!

  """Slug of the channel."""
  slug: String!
}

"""
Update a channel. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelUpdate {
  channelErrors: [ChannelError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ChannelError!]!
  channel: Channel
}

input ChannelUpdateInput {
  """isActive flag."""
  isActive: Boolean

  """Name of the channel."""
  name: String

  """Slug of the channel."""
  slug: String
}

"""
Delete a channel. Orders associated with the deleted channel will be moved to the target channel. Checkouts, product availability, and pricing will be removed. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelDelete {
  channelErrors: [ChannelError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ChannelError!]!
  channel: Channel
}

input ChannelDeleteInput {
  """ID of channel to migrate orders from origin channel."""
  channelId: ID!
}

"""
Activate a channel. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelActivate {
  """Activated channel."""
  channel: Channel
  channelErrors: [ChannelError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ChannelError!]!
}

"""
Deactivate a channel. 

Requires one of the following permissions: MANAGE_CHANNELS.
"""
type ChannelDeactivate {
  """Deactivated channel."""
  channel: Channel
  channelErrors: [ChannelError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [ChannelError!]!
}

"""
Creates a new app. Requires the following permissions: AUTHENTICATED_STAFF_USER and MANAGE_APPS.
"""
type AppCreate {
  """The newly created authentication token."""
  authToken: String
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  app: App
}

type AppError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: AppErrorCode!

  """List of permissions which causes the error."""
  permissions: [PermissionEnum!]
}

"""An enumeration."""
enum AppErrorCode {
  FORBIDDEN
  GRAPHQL_ERROR
  INVALID
  INVALID_STATUS
  INVALID_PERMISSION
  INVALID_URL_FORMAT
  INVALID_MANIFEST_FORMAT
  MANIFEST_URL_CANT_CONNECT
  NOT_FOUND
  REQUIRED
  UNIQUE
  OUT_OF_SCOPE_APP
  OUT_OF_SCOPE_PERMISSION
}

input AppInput {
  """Name of the app."""
  name: String

  """List of permission code names to assign to this app."""
  permissions: [PermissionEnum!]
}

"""
Updates an existing app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppUpdate {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  app: App
}

"""
Deletes an app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppDelete {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  app: App
}

"""
Creates a new token. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppTokenCreate {
  """The newly created authentication token."""
  authToken: String
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  appToken: AppToken
}

input AppTokenInput {
  """Name of the token."""
  name: String

  """ID of app."""
  app: ID!
}

"""
Deletes an authentication token assigned to app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppTokenDelete {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  appToken: AppToken
}

"""Verify provided app token."""
type AppTokenVerify {
  """Determine if token is valid or not."""
  valid: Boolean!
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
}

"""
Install new app by using app manifest. Requires the following permissions: AUTHENTICATED_STAFF_USER and MANAGE_APPS.
"""
type AppInstall {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  appInstallation: AppInstallation
}

input AppInstallInput {
  """Name of the app to install."""
  appName: String

  """Url to app's manifest in JSON format."""
  manifestUrl: String

  """Determine if app will be set active or not."""
  activateAfterInstallation: Boolean = true

  """List of permission code names to assign to this app."""
  permissions: [PermissionEnum!]
}

"""
Retry failed installation of new app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppRetryInstall {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  appInstallation: AppInstallation
}

"""
Delete failed installation. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppDeleteFailedInstallation {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  appInstallation: AppInstallation
}

"""
Fetch and validate manifest. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppFetchManifest {
  manifest: Manifest
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
}

"""The manifest definition."""
type Manifest {
  identifier: String!
  version: String!
  name: String!
  about: String
  permissions: [Permission!]
  appUrl: String

  """URL to iframe with the configuration for the app."""
  configurationUrl: String @deprecated(reason: "This field will be removed in Saleor 4.0. Use `appUrl` instead.")
  tokenTargetUrl: String

  """Description of the data privacy defined for this app."""
  dataPrivacy: String @deprecated(reason: "This field will be removed in Saleor 4.0. Use `dataPrivacyUrl` instead.")
  dataPrivacyUrl: String
  homepageUrl: String
  supportUrl: String
  extensions: [AppManifestExtension!]!

  """
  List of the app's webhooks.
  
  Added in Saleor 3.5.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  webhooks: [AppManifestWebhook!]!
}

type AppManifestExtension {
  """List of the app extension's permissions."""
  permissions: [Permission!]!

  """Label of the extension to show in the dashboard."""
  label: String!

  """URL of a view where extension's iframe is placed."""
  url: String!

  """Place where given extension will be mounted."""
  mount: AppExtensionMountEnum!

  """Type of way how app extension will be opened."""
  target: AppExtensionTargetEnum!
}

type AppManifestWebhook {
  """The name of the webhook."""
  name: String!

  """The asynchronous events that webhook wants to subscribe."""
  asyncEvents: [WebhookEventTypeAsyncEnum!]

  """Subscription query of a webhook"""
  query: String!

  """The url to receive the payload."""
  targetUrl: String!
}

"""
Activate the app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppActivate {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  app: App
}

"""
Deactivate the app. 

Requires one of the following permissions: MANAGE_APPS.
"""
type AppDeactivate {
  appErrors: [AppError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AppError!]!
  app: App
}

"""Create JWT token."""
type CreateToken {
  """JWT token, required to authenticate."""
  token: String

  """JWT refresh token, required to re-generate access token."""
  refreshToken: String

  """CSRF token required to re-generate access token."""
  csrfToken: String

  """A user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

type AccountError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: AccountErrorCode!
}

"""An enumeration."""
enum AccountErrorCode {
  ACTIVATE_OWN_ACCOUNT
  ACTIVATE_SUPERUSER_ACCOUNT
  DUPLICATED_INPUT_ITEM
  DEACTIVATE_OWN_ACCOUNT
  DEACTIVATE_SUPERUSER_ACCOUNT
  DELETE_NON_STAFF_USER
  DELETE_OWN_ACCOUNT
  DELETE_STAFF_ACCOUNT
  DELETE_SUPERUSER_ACCOUNT
  GRAPHQL_ERROR
  INACTIVE
  INVALID
  INVALID_PASSWORD
  LEFT_NOT_MANAGEABLE_PERMISSION
  INVALID_CREDENTIALS
  NOT_FOUND
  OUT_OF_SCOPE_USER
  OUT_OF_SCOPE_GROUP
  OUT_OF_SCOPE_PERMISSION
  PASSWORD_ENTIRELY_NUMERIC
  PASSWORD_TOO_COMMON
  PASSWORD_TOO_SHORT
  PASSWORD_TOO_SIMILAR
  REQUIRED
  UNIQUE
  JWT_SIGNATURE_EXPIRED
  JWT_INVALID_TOKEN
  JWT_DECODE_ERROR
  JWT_MISSING_TOKEN
  JWT_INVALID_CSRF_TOKEN
  CHANNEL_INACTIVE
  MISSING_CHANNEL_SLUG
  ACCOUNT_NOT_CONFIRMED
}

"""
Refresh JWT token. Mutation tries to take refreshToken from the input.If it fails it will try to take refreshToken from the http-only cookie -refreshToken. csrfToken is required when refreshToken is provided as a cookie.
"""
type RefreshToken {
  """JWT token, required to authenticate."""
  token: String

  """A user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Verify JWT token."""
type VerifyToken {
  """User assigned to token."""
  user: User

  """Determine if token is valid or not."""
  isValid: Boolean!

  """JWT payload."""
  payload: GenericScalar
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar

"""
Deactivate all JWT tokens of the currently authenticated user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type DeactivateAllUserTokens {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Prepare external authentication url for user by custom plugin."""
type ExternalAuthenticationUrl {
  """The data returned by authentication plugin."""
  authenticationData: JSONString
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Obtain external access tokens for user by custom plugin."""
type ExternalObtainAccessTokens {
  """The token, required to authenticate."""
  token: String

  """The refresh token, required to re-generate external access token."""
  refreshToken: String

  """CSRF token required to re-generate external access token."""
  csrfToken: String

  """A user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Refresh user's access by custom plugin."""
type ExternalRefresh {
  """The token, required to authenticate."""
  token: String

  """The refresh token, required to re-generate external access token."""
  refreshToken: String

  """CSRF token required to re-generate external access token."""
  csrfToken: String

  """A user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Logout user by custom plugin."""
type ExternalLogout {
  """The data returned by authentication plugin."""
  logoutData: JSONString
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Verify external authentication data by plugin."""
type ExternalVerify {
  """User assigned to data."""
  user: User

  """Determine if authentication data is valid or not."""
  isValid: Boolean!

  """External data."""
  verifyData: JSONString
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Sends an email with the account password modification link."""
type RequestPasswordReset {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Confirm user account with token sent by email during registration."""
type ConfirmAccount {
  """An activated user account."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Sets the user's password from the token sent by email using the RequestPasswordReset mutation.
"""
type SetPassword {
  """JWT token, required to authenticate."""
  token: String

  """JWT refresh token, required to re-generate access token."""
  refreshToken: String

  """CSRF token required to re-generate access token."""
  csrfToken: String

  """A user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Change the password of the logged in user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type PasswordChange {
  """A user instance with a new password."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Request email change of the logged in user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type RequestEmailChange {
  """A user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Confirm the email change of the logged-in user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type ConfirmEmailChange {
  """A user instance with a new email."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Create a new address for the customer. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type AccountAddressCreate {
  """A user instance for which the address was created."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

input AddressInput {
  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """Company or organization."""
  companyName: String

  """Address."""
  streetAddress1: String

  """Address."""
  streetAddress2: String

  """City."""
  city: String

  """District."""
  cityArea: String

  """Postal code."""
  postalCode: String

  """Country."""
  country: CountryCode

  """State or province."""
  countryArea: String

  """Phone number."""
  phone: String
}

"""
Updates an address of the logged-in user. Requires one of the following permissions: MANAGE_USERS, IS_OWNER.
"""
type AccountAddressUpdate {
  """A user object for which the address was edited."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Delete an address of the logged-in user. Requires one of the following permissions: MANAGE_USERS, IS_OWNER.
"""
type AccountAddressDelete {
  """A user instance for which the address was deleted."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Sets a default address for the authenticated user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type AccountSetDefaultAddress {
  """An updated user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""Register a new user."""
type AccountRegister {
  """Informs whether users need to confirm their email address."""
  requiresConfirmation: Boolean
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

input AccountRegisterInput {
  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """User language code."""
  languageCode: LanguageCodeEnum

  """The email address of the user."""
  email: String!

  """Password."""
  password: String!

  """Base of frontend URL that will be needed to create confirmation URL."""
  redirectUrl: String

  """User public metadata."""
  metadata: [MetadataInput!]

  """
  Slug of a channel which will be used to notify users. Optional when only one channel exists.
  """
  channel: String
}

"""
Updates the account of the logged-in user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type AccountUpdate {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

input AccountInput {
  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """User language code."""
  languageCode: LanguageCodeEnum

  """Billing address of the customer."""
  defaultBillingAddress: AddressInput

  """Shipping address of the customer."""
  defaultShippingAddress: AddressInput
}

"""
Sends an email with the account removal link for the logged-in user. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type AccountRequestDeletion {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Remove user account. 

Requires one of the following permissions: AUTHENTICATED_USER.
"""
type AccountDelete {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

"""
Creates user address. 

Requires one of the following permissions: MANAGE_USERS.
"""
type AddressCreate {
  """A user instance for which the address was created."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Updates an address. 

Requires one of the following permissions: MANAGE_USERS.
"""
type AddressUpdate {
  """A user object for which the address was edited."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Deletes an address. 

Requires one of the following permissions: MANAGE_USERS.
"""
type AddressDelete {
  """A user instance for which the address was deleted."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  address: Address
}

"""
Sets a default address for the given user. 

Requires one of the following permissions: MANAGE_USERS.
"""
type AddressSetDefault {
  """An updated user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Creates a new customer. 

Requires one of the following permissions: MANAGE_USERS.
"""
type CustomerCreate {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

input UserCreateInput {
  """Billing address of the customer."""
  defaultBillingAddress: AddressInput

  """Shipping address of the customer."""
  defaultShippingAddress: AddressInput

  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """The unique email address of the user."""
  email: String

  """User account is active."""
  isActive: Boolean

  """A note about the user."""
  note: String

  """User language code."""
  languageCode: LanguageCodeEnum

  """
  URL of a view where users should be redirected to set the password. URL in RFC 1808 format.
  """
  redirectUrl: String

  """
  Slug of a channel which will be used for notify user. Optional when only one channel exists.
  """
  channel: String
}

"""
Updates an existing customer. 

Requires one of the following permissions: MANAGE_USERS.
"""
type CustomerUpdate {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

input CustomerInput {
  """Billing address of the customer."""
  defaultBillingAddress: AddressInput

  """Shipping address of the customer."""
  defaultShippingAddress: AddressInput

  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """The unique email address of the user."""
  email: String

  """User account is active."""
  isActive: Boolean

  """A note about the user."""
  note: String

  """User language code."""
  languageCode: LanguageCodeEnum
}

"""
Deletes a customer. 

Requires one of the following permissions: MANAGE_USERS.
"""
type CustomerDelete {
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
  user: User
}

"""
Deletes customers. 

Requires one of the following permissions: MANAGE_USERS.
"""
type CustomerBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Creates a new staff user. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type StaffCreate {
  staffErrors: [StaffError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [StaffError!]!
  user: User
}

type StaffError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: AccountErrorCode!

  """List of permissions which causes the error."""
  permissions: [PermissionEnum!]

  """List of permission group IDs which cause the error."""
  groups: [ID!]

  """List of user IDs which causes the error."""
  users: [ID!]
}

input StaffCreateInput {
  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """The unique email address of the user."""
  email: String

  """User account is active."""
  isActive: Boolean

  """A note about the user."""
  note: String

  """List of permission group IDs to which user should be assigned."""
  addGroups: [ID!]

  """
  URL of a view where users should be redirected to set the password. URL in RFC 1808 format.
  """
  redirectUrl: String
}

"""
Updates an existing staff user. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type StaffUpdate {
  staffErrors: [StaffError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [StaffError!]!
  user: User
}

input StaffUpdateInput {
  """Given name."""
  firstName: String

  """Family name."""
  lastName: String

  """The unique email address of the user."""
  email: String

  """User account is active."""
  isActive: Boolean

  """A note about the user."""
  note: String

  """List of permission group IDs to which user should be assigned."""
  addGroups: [ID!]

  """List of permission group IDs from which user should be unassigned."""
  removeGroups: [ID!]
}

"""
Deletes a staff user. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type StaffDelete {
  staffErrors: [StaffError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [StaffError!]!
  user: User
}

"""
Deletes staff users. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type StaffBulkDelete {
  """Returns how many objects were affected."""
  count: Int!
  staffErrors: [StaffError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [StaffError!]!
}

"""
Create a user avatar. Only for staff members. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec 

Requires one of the following permissions: AUTHENTICATED_STAFF_USER.
"""
type UserAvatarUpdate {
  """An updated user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Deletes a user avatar. Only for staff members. 

Requires one of the following permissions: AUTHENTICATED_STAFF_USER.
"""
type UserAvatarDelete {
  """An updated user instance."""
  user: User
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Activate or deactivate users. 

Requires one of the following permissions: MANAGE_USERS.
"""
type UserBulkSetActive {
  """Returns how many objects were affected."""
  count: Int!
  accountErrors: [AccountError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [AccountError!]!
}

"""
Create new permission group. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type PermissionGroupCreate {
  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PermissionGroupError!]!
  group: Group
}

type PermissionGroupError {
  """
  Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.
  """
  field: String

  """The error message."""
  message: String

  """The error code."""
  code: PermissionGroupErrorCode!

  """List of permissions which causes the error."""
  permissions: [PermissionEnum!]

  """List of user IDs which causes the error."""
  users: [ID!]
}

"""An enumeration."""
enum PermissionGroupErrorCode {
  ASSIGN_NON_STAFF_MEMBER
  DUPLICATED_INPUT_ITEM
  CANNOT_REMOVE_FROM_LAST_GROUP
  LEFT_NOT_MANAGEABLE_PERMISSION
  OUT_OF_SCOPE_PERMISSION
  OUT_OF_SCOPE_USER
  REQUIRED
  UNIQUE
}

input PermissionGroupCreateInput {
  """List of permission code names to assign to this group."""
  addPermissions: [PermissionEnum!]

  """List of users to assign to this group."""
  addUsers: [ID!]

  """Group name."""
  name: String!
}

"""
Update permission group. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type PermissionGroupUpdate {
  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PermissionGroupError!]!
  group: Group
}

input PermissionGroupUpdateInput {
  """List of permission code names to assign to this group."""
  addPermissions: [PermissionEnum!]

  """List of users to assign to this group."""
  addUsers: [ID!]

  """Group name."""
  name: String

  """List of permission code names to unassign from this group."""
  removePermissions: [PermissionEnum!]

  """List of users to unassign from this group."""
  removeUsers: [ID!]
}

"""
Delete permission group. Apps are not allowed to perform this mutation. 

Requires one of the following permissions: MANAGE_STAFF.
"""
type PermissionGroupDelete {
  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: "This field will be removed in Saleor 4.0. Use `errors` field instead.")
  errors: [PermissionGroupError!]!
  group: Group
}

type Subscription {
  """
  Look up subscription event.
  
  Added in Saleor 3.2.
  
  Note: this API is currently in Feature Preview and can be subject to changes at later point.
  """
  event: Event
}

interface Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App
}

union IssuingPrincipal = App | User

"""
Event sent when new app is installed.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AppInstalled implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The application the event relates to."""
  app: App
}

"""
Event sent when app is updated.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AppUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The application the event relates to."""
  app: App
}

"""
Event sent when app is deleted.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AppDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The application the event relates to."""
  app: App
}

"""
Event sent when app status has changed.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type AppStatusChanged implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The application the event relates to."""
  app: App
}

"""
Event sent when new channel is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ChannelCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The channel the event relates to."""
  channel: Channel
}

"""
Event sent when channel is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ChannelUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The channel the event relates to."""
  channel: Channel
}

"""
Event sent when channel is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ChannelDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The channel the event relates to."""
  channel: Channel
}

"""
Event sent when channel status has changed.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type ChannelStatusChanged implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The channel the event relates to."""
  channel: Channel
}

"""
Event sent when new menu is created.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu the event relates to."""
  menu(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Menu
}

"""
Event sent when menu is updated.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu the event relates to."""
  menu(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Menu
}

"""
Event sent when menu is deleted.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu the event relates to."""
  menu(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): Menu
}

"""
Event sent when new menu item is created.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuItemCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu item the event relates to."""
  menuItem(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): MenuItem
}

"""
Event sent when menu item is updated.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuItemUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu item the event relates to."""
  menuItem(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): MenuItem
}

"""
Event sent when menu item is deleted.

Added in Saleor 3.4.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type MenuItemDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The menu item the event relates to."""
  menuItem(
    """Slug of a channel for which the data should be returned."""
    channel: String
  ): MenuItem
}

"""
Event sent when new customer user is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CustomerCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

"""
Event sent when customer user is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type CustomerUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

"""
Event sent when new page is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page the event relates to."""
  page: Page
}

"""
Event sent when page is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page the event relates to."""
  page: Page
}

"""
Event sent when page is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page the event relates to."""
  page: Page
}

"""
Event sent when new page type is created.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageTypeCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page type the event relates to."""
  pageType: PageType
}

"""
Event sent when page type is updated.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageTypeUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page type the event relates to."""
  pageType: PageType
}

"""
Event sent when page type is deleted.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PageTypeDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The page type the event relates to."""
  pageType: PageType
}

"""
Event sent when new post is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PostCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The post the event relates to."""
  post: Post
}

"""
Event sent when post is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PostUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The post the event relates to."""
  post: Post
}

"""
Event sent when post is deleted.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PostDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The post the event relates to."""
  post: Post
}

"""
Event sent when new post type is created.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PostTypeCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The post type the event relates to."""
  postType: PostType
}

"""
Event sent when post type is updated.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PostTypeUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The post type the event relates to."""
  postType: PostType
}

"""
Event sent when post type is deleted.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PostTypeDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The post type the event relates to."""
  postType: PostType
}

"""
Event sent when new permission group is created.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PermissionGroupCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The permission group the event relates to."""
  permissionGroup: Group
}

"""
Event sent when permission group is updated.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PermissionGroupUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The permission group the event relates to."""
  permissionGroup: Group
}

"""
Event sent when permission group is deleted.

Added in Saleor 3.6.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type PermissionGroupDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The permission group the event relates to."""
  permissionGroup: Group
}

"""
Event sent when new staff user is created.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type StaffCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

"""
Event sent when staff user is updated.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type StaffUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

"""
Event sent when staff user is deleted.

Added in Saleor 3.5.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type StaffDeleted implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The user the event relates to."""
  user: User
}

"""
Event sent when new translation is created.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TranslationCreated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The translation the event relates to."""
  translation: TranslationTypes
}

union TranslationTypes = PageTranslation | PostTranslation | MenuItemTranslation

"""
Event sent when translation is updated.

Added in Saleor 3.2.

Note: this API is currently in Feature Preview and can be subject to changes at later point.
"""
type TranslationUpdated implements Event {
  """Time of the event."""
  issuedAt: DateTime

  """Saleor version that triggered the event."""
  version: String

  """The user or application that triggered the event."""
  issuingPrincipal: IssuingPrincipal

  """The application receiving the webhook."""
  recipient: App

  """The translation the event relates to."""
  translation: TranslationTypes
}

"""_Any value scalar as defined by Federation spec."""
scalar _Any

"""_Entity union as defined by Federation spec."""
union _Entity = App | Address | User | Group

"""_Service manifest as defined by Federation spec."""
type _Service {
  sdl: String
}
